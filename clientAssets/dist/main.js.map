{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/alertifyjs/build/alertify.js","webpack:///./src/sass/main.scss","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/cart.js","webpack:///./src/index.js","webpack:///./src/kodCommerce.js","webpack:///./src/sass/main.scss?2088","webpack:///./src/variation.js"],"names":["kodObject","config","key","priceFormatter","locale","currency","thousandSeparator","decimalSeparator","apiRoute","controller","indexAction","addAction","removeAction","clearAction","errorMessage","contentError","UIController","DOMSelector","inputs","quantity","cartButtonsContainer","container","cart","item","list","total","totalItems","emptyText","summaryAction","buttons","quantityIncDec","addToCart","cartRemoveBtn","cartSaveBtn","cartClearBtn","cartCheckOutBtn","updateQuantity","value","id","$","val","getQuantity","parseInt","disableButton","selector","attr","displayTotals","html","formatPrice","price","cfg","Intl","NumberFormat","style","format","hideEmptyCartText","active","ele","fadeOut","fadeIn","hideCartActions","console","log","hide","show","init","userSelector","Object","assign","getCartItemData","event","target","sku","tagName","toLowerCase","parent","data","quantityEle","find","totalEle","renderCartItem","variation","entries","name","variationText","i","length","image","label","calculatePrice","append","getSelector","updateButtonText","text","setCartTotal","getCartTotal","removeCartItemUI","remove","clearCartItem","updateCartItemTotal","cartController","loaded","Item","product_id","prototype","productPrice","build","obj","increaseQuantity","decreaseQuantity","save","localStorage","setItem","JSON","stringify","load","parse","getItem","mapCartItems","fetchCartFromServer","getTotal","count","getItems","forEach","items","amount","values","addItem","client","then","catch","e","Notification","notify","error","message","removeItem","x","warning","setTimeout","clear","initializeCart","finally","fromServer","onClear","isEmptyCart","getCartItem","fetchCart","add","AppController","UICtrl","cartCtrl","noty","methods","clearUI","hideCartElement","onSuccess","totals","actions","inputEle","hasClass","product_type","toggle","success","updateToCart","removeFromCart","confirm","isEmpty","clearCart","setupEvents","on","loadCartToUI","getActionType","str","location","href","n","lastIndexOf","substring","cartItems","renderCartItems","userConfig","kodCart","kodCommerce","alertify","window","cartConfig","kodVariation","variationConfig","api","endpoint","apiurl","url","fetch","method","mode","cache","credentials","headers","document","querySelector","redirect","referrerPolicy","body","response","contentType","get","includes","TypeError","status","json","statusText","developerConifg","engine","msg","dismissAll","onReject","VariationController","serverCtrl","selectedVariation","getSKU","productId","setVariation","totalSelected","getVariation","variations","stock","addToCartBtn","set","getVariationData","$product","totalVariations","getVariationAttribute","attributeName","attributeValue","parentClass","split","removeClass","addClass","loading","buttonEle","getDomSelector","variationCtrl","index","res"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,mBAAmB,OAAO;AAC1B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,mBAAmB,OAAO;AAC1B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA,6DAA6D,wCAAwC;AACrG;;AAEA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA,gEAAgE,wCAAwC;AACxG;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qHAAqH;AAC/I;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,wCAAwC;AACpE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G;AAC1G;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA,oBAAoB,U;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,cAAc;AACjC,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gDAAgD;AAC/F,yBAAyB;AACzB,+CAA+C,iDAAiD;AAChG;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0CAA0C;;AAErF,qBAAqB;AACrB,2CAA2C,2CAA2C;AACtF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA,oBAAoB;AACpB;AACA;AACA;AACA,iCAAiC,0CAA0C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB,kBAAkB,OAAO;AACzB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;;AAGA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,KAAK;AACxB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,KAAK;AACxB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,KAAK;AACxB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,KAAK;AACxB,mBAAmB,QAAQ;AAC3B;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,uBAAuB,iBAAiB;AACxC;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,cAAc;AACrC,uBAAuB,OAAO;AAC9B;AACA,wBAAwB;AACxB;AACA;AACA;AACA,mFAAmF,2BAA2B,EAAE;AAChH;AACA;AACA;AACA,qBAAqB;AACrB,8FAA8F;AAC9F,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wBAAwB;AACxB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wBAAwB;AACxB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gBAAgB,EAAE;AAC1F;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,QAAQ;AAC/B;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,OAAO,sEAAsE,KAAK;AACzG,uBAAuB,SAAS;AAChC;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,OAAO;AACzB;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,qBAAqB,SAAS;AAC9B,uBAAuB,QAAQ;AAC/B,kBAAkB,OAAO;AACzB;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,SAAS;AAChC,uBAAuB,QAAQ;AAC/B,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA,wBAAwB;AACxB;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,cAAc;AACrC,uBAAuB,QAAQ;AAC/B;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA,wBAAwB,oBAAoB;AAC5C,wBAAwB,OAAO;AAC/B,wBAAwB,OAAO;AAC/B,wBAAwB,SAAS;AACjC;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,wBAAwB,OAAO;AAC/B,wBAAwB,SAAS;AACjC;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,wBAAwB,OAAO;AAC/B,wBAAwB,SAAS;AACjC;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,wBAAwB,OAAO;AAC/B,wBAAwB,SAAS;AACjC;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,wBAAwB,OAAO;AAC/B,wBAAwB,SAAS;AACjC;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,mCAAmC;AACnJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA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Ac,mBAAO,CAAC,uDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA,mBAAmB,2BAA2B;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,QAAQ,uBAAuB;AAC/B;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,kDAAkD,sBAAsB;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA,KAAK,KAAwC,EAAE,EAE7C;;AAEF,QAAQ,sBAAiB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;;AAEA,6BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC9YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW,EAAE;AACrD,wCAAwC,WAAW,EAAE;;AAErD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,sCAAsC;AACtC,GAAG;AACH;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;;;;AAIiB,yEAAUA,SAAV,EAAqB;AAC9B,MAAIC,MAAM,GAAG;AACTC,OAAG,EAAE,MADI;AAETC,kBAAc,EAAC;AACXC,YAAM,EAAC,IADI;AAEZC,cAAQ,EAAC,KAFG;AAGZC,uBAAiB,EAAC,GAHN;AAIXC,sBAAgB,EAAC;AAJN,KAFN;AASTC,YAAQ,EAAE;AACNC,gBAAU,EAAE,oBADN;AAENC,iBAAW,EAAE,EAFP;A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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * alertifyjs 1.13.1 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2019 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/\r\n( function ( window ) {\r\n    'use strict';\r\n    var NOT_DISABLED_NOT_RESET = ':not(:disabled):not(.ajs-reset)';\r\n    /**\r\n     * Keys enum\r\n     * @type {Object}\r\n     */\r\n    var keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        F1: 112,\r\n        F12: 123,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        TAB: 9\r\n    };\r\n    /**\r\n     * Default options \r\n     * @type {Object}\r\n     */\r\n    var defaults = {\r\n        autoReset:true,\r\n        basic:false,\r\n        closable:true,\r\n        closableByDimmer:true,\r\n        invokeOnCloseOff:false,\r\n        frameless:false,\r\n        defaultFocusOff:false,\r\n        maintainFocus:true, //global default not per instance, applies to all dialogs\r\n        maximizable:true,\r\n        modal:true,\r\n        movable:true,\r\n        moveBounded:false,\r\n        overflow:true,\r\n        padding: true,\r\n        pinnable:true,\r\n        pinned:true,\r\n        preventBodyShift:false, //global default not per instance, applies to all dialogs\r\n        resizable:true,\r\n        startMaximized:false,\r\n        transition:'pulse',\r\n        transitionOff:false,\r\n        tabbable:['button', '[href]', 'input', 'select', 'textarea', '[tabindex]:not([tabindex^=\"-\"])'+NOT_DISABLED_NOT_RESET].join(NOT_DISABLED_NOT_RESET+','),//global\r\n        notifier:{\r\n            delay:5,\r\n            position:'bottom-right',\r\n            closeButton:false,\r\n            classes: {\r\n                base: 'alertify-notifier',\r\n                prefix:'ajs-',\r\n                message: 'ajs-message',\r\n                top: 'ajs-top',\r\n                right: 'ajs-right',\r\n                bottom: 'ajs-bottom',\r\n                left: 'ajs-left',\r\n                center: 'ajs-center',\r\n                visible: 'ajs-visible',\r\n                hidden: 'ajs-hidden',\r\n                close: 'ajs-close'\r\n            }\r\n        },\r\n        glossary:{\r\n            title:'AlertifyJS',\r\n            ok: 'OK',\r\n            cancel: 'Cancel',\r\n            acccpt: 'Accept',\r\n            deny: 'Deny',\r\n            confirm: 'Confirm',\r\n            decline: 'Decline',\r\n            close: 'Close',\r\n            maximize: 'Maximize',\r\n            restore: 'Restore',\r\n        },\r\n        theme:{\r\n            input:'ajs-input',\r\n            ok:'ajs-ok',\r\n            cancel:'ajs-cancel',\r\n        },\r\n        hooks:{\r\n            preinit:function(){},\r\n            postinit:function(){}\r\n        }\r\n    };\r\n    \r\n    //holds open dialogs instances\r\n    var openDialogs = [];\r\n\r\n    /**\r\n     * [Helper]  Adds the specified class(es) to the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function addClass(element,classNames){\r\n        element.className += ' ' + classNames;\r\n    }\r\n    \r\n    /**\r\n     * [Helper]  Removes the specified class(es) from the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function removeClass(element, classNames) {\r\n        var original = element.className.split(' ');\r\n        var toBeRemoved = classNames.split(' ');\r\n        for (var x = 0; x < toBeRemoved.length; x += 1) {\r\n            var index = original.indexOf(toBeRemoved[x]);\r\n            if (index > -1){\r\n                original.splice(index,1);\r\n            }\r\n        }\r\n        element.className = original.join(' ');\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Checks if the document is RTL\r\n     *\r\n     * @return {Boolean} True if the document is RTL, false otherwise.\r\n     */\r\n    function isRightToLeft(){\r\n        return window.getComputedStyle(document.body).direction === 'rtl';\r\n    }\r\n    /**\r\n     * [Helper]  Get the document current scrollTop\r\n     *\r\n     * @return {Number} current document scrollTop value\r\n     */\r\n    function getScrollTop(){\r\n        return ((document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop);\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Get the document current scrollLeft\r\n     *\r\n     * @return {Number} current document scrollLeft value\r\n     */\r\n    function getScrollLeft(){\r\n        return ((document.documentElement && document.documentElement.scrollLeft) || document.body.scrollLeft);\r\n    }\r\n\r\n    /**\r\n    * Helper: clear contents\r\n    *\r\n    */\r\n    function clearContents(element){\r\n        while (element.lastChild) {\r\n            element.removeChild(element.lastChild);\r\n        }\r\n    }\r\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */\r\n    function copy(src) {\r\n        if(null === src){\r\n            return src;\r\n        }\r\n        var cpy;\r\n        if(Array.isArray(src)){\r\n            cpy = [];\r\n            for(var x=0;x<src.length;x+=1){\r\n                cpy.push(copy(src[x]));\r\n            }\r\n            return cpy;\r\n        }\r\n      \r\n        if(src instanceof Date){\r\n            return new Date(src.getTime());\r\n        }\r\n      \r\n        if(src instanceof RegExp){\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        \r\n        if(typeof src === 'object'){\r\n            cpy = {};\r\n            // copy dialog pototype over definition.\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = copy(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    }\r\n    /**\r\n      * Helper: destruct the dialog\r\n      *\r\n      */\r\n    function destruct(instance, initialize){\r\n        if(instance.elements){\r\n            //delete the dom and it's references.\r\n            var root = instance.elements.root;\r\n            root.parentNode.removeChild(root);\r\n            delete instance.elements;\r\n            //copy back initial settings.\r\n            instance.settings = copy(instance.__settings);\r\n            //re-reference init function.\r\n            instance.__init = initialize;\r\n            //delete __internal variable to allow re-initialization.\r\n            delete instance.__internal;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test to check if passive event listeners are supported.\r\n     */\r\n    var IsPassiveSupported = false;\r\n    try {\r\n        var options = Object.defineProperty({}, 'passive', {\r\n            get: function () {\r\n                IsPassiveSupported = true;\r\n            }\r\n        });\r\n        window.addEventListener('test', options, options);\r\n        window.removeEventListener('test', options, options);\r\n    } catch (e) {}\r\n\r\n     /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to register the listenr on.\r\n     * @param {string} event The event type to listen for.\r\n     * @param {Function} handler The function to handle the event.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var on = function (el, event, fn, useCapture, passive) {\r\n        el.addEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to unregister the listenr from.\r\n     * @param {string} event The event type to remove.\r\n     * @param {Function} fn The event handler to remove.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var off = function (el, event, fn, useCapture, passive) {\r\n        el.removeEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Prevent default event from firing\r\n     *\r\n     * @param  {Event} event Event object\r\n     * @return {undefined}\r\n\r\n    function prevent ( event ) {\r\n        if ( event ) {\r\n            if ( event.preventDefault ) {\r\n                event.preventDefault();\r\n            } else {\r\n                event.returnValue = false;\r\n            }\r\n        }\r\n    }\r\n    */\r\n    var transition = (function () {\r\n        var t, type;\r\n        var supported = false;\r\n        var transitions = {\r\n            'animation'        : 'animationend',\r\n            'OAnimation'       : 'oAnimationEnd oanimationend',\r\n            'msAnimation'      : 'MSAnimationEnd',\r\n            'MozAnimation'     : 'animationend',\r\n            'WebkitAnimation'  : 'webkitAnimationEnd'\r\n        };\r\n\r\n        for (t in transitions) {\r\n            if (document.documentElement.style[t] !== undefined) {\r\n                type = transitions[t];\r\n                supported = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            supported: supported\r\n        };\r\n    }());\r\n\r\n    /**\r\n    * Creates event handler delegate that sends the instance as last argument.\r\n    * \r\n    * @return {Function}    a function wrapper which sends the instance as last argument.\r\n    */\r\n    function delegate(context, method) {\r\n        return function () {\r\n            if (arguments.length > 0) {\r\n                var args = [];\r\n                for (var x = 0; x < arguments.length; x += 1) {\r\n                    args.push(arguments[x]);\r\n                }\r\n                args.push(context);\r\n                return method.apply(context, args);\r\n            }\r\n            return method.apply(context, [null, context]);\r\n        };\r\n    }\r\n    /**\r\n    * Helper for creating a dialog close event.\r\n    * \r\n    * @return {object}\r\n    */\r\n    function createCloseEvent(index, button) {\r\n        return {\r\n            index: index,\r\n            button: button,\r\n            cancel: false\r\n        };\r\n    }\r\n    /**\r\n    * Helper for dispatching events.\r\n    *\r\n    * @param  {string} evenType The type of the event to disptach.\r\n    * @param  {object} instance The dialog instance disptaching the event.\r\n    *\r\n    * @return   {any}   The result of the invoked function.\r\n    */\r\n    function dispatchEvent(eventType, instance) {\r\n        if ( typeof instance.get(eventType) === 'function' ) {\r\n            return instance.get(eventType).call(instance);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Super class for all dialogs\r\n     *\r\n     * @return {Object}\t\tbase dialog prototype\r\n     */\r\n    var dialog = (function () {\r\n        var //holds the list of used keys.\r\n            usedKeys = [],\r\n            //dummy variable, used to trigger dom reflow.\r\n            reflow = null,\r\n            //holds body tab index in case it has any.\r\n            tabindex = false,\r\n            //condition for detecting safari\r\n            isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\r\n            //dialog building blocks\r\n            templates = {\r\n                dimmer:'<div class=\"ajs-dimmer\"></div>',\r\n                /*tab index required to fire click event before body focus*/\r\n                modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\r\n                dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\r\n                reset: '<button class=\"ajs-reset\"></button>',\r\n                commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\r\n                header: '<div class=\"ajs-header\"></div>',\r\n                body: '<div class=\"ajs-body\"></div>',\r\n                content: '<div class=\"ajs-content\"></div>',\r\n                footer: '<div class=\"ajs-footer\"></div>',\r\n                buttons: { primary: '<div class=\"ajs-primary ajs-buttons\"></div>', auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>' },\r\n                button: '<button class=\"ajs-button\"></button>',\r\n                resizeHandle: '<div class=\"ajs-handle\"></div>',\r\n            },\r\n            //common class names\r\n            classes = {\r\n                animationIn: 'ajs-in',\r\n                animationOut: 'ajs-out',\r\n                base: 'alertify',\r\n                basic:'ajs-basic',\r\n                capture: 'ajs-capture',\r\n                closable:'ajs-closable',\r\n                fixed: 'ajs-fixed',\r\n                frameless:'ajs-frameless',\r\n                hidden: 'ajs-hidden',\r\n                maximize: 'ajs-maximize',\r\n                maximized: 'ajs-maximized',\r\n                maximizable:'ajs-maximizable',\r\n                modeless: 'ajs-modeless',\r\n                movable: 'ajs-movable',\r\n                noSelection: 'ajs-no-selection',\r\n                noOverflow: 'ajs-no-overflow',\r\n                noPadding:'ajs-no-padding',\r\n                pin:'ajs-pin',\r\n                pinnable:'ajs-pinnable',\r\n                prefix: 'ajs-',\r\n                resizable: 'ajs-resizable',\r\n                restore: 'ajs-restore',\r\n                shake:'ajs-shake',\r\n                unpinned:'ajs-unpinned',\r\n                noTransition:'ajs-no-transition'\r\n            };\r\n\r\n        /**\r\n         * Helper: initializes the dialog instance\r\n         * \r\n         * @return\t{Number}\tThe total count of currently open modals.\r\n         */\r\n        function initialize(instance){\r\n            \r\n            if(!instance.__internal){\r\n                //invoke preinit global hook\r\n                alertify.defaults.hooks.preinit(instance);\r\n                //no need to expose init after this.\r\n                delete instance.__init;\r\n              \r\n                //keep a copy of initial dialog settings\r\n                if(!instance.__settings){\r\n                    instance.__settings = copy(instance.settings);\r\n                }\r\n                \r\n                //get dialog buttons/focus setup\r\n                var setup;\r\n                if(typeof instance.setup === 'function'){\r\n                    setup = instance.setup();\r\n                    setup.options = setup.options  || {};\r\n                    setup.focus = setup.focus  || {};\r\n                }else{\r\n                    setup = {\r\n                        buttons:[],\r\n                        focus:{\r\n                            element:null,\r\n                            select:false\r\n                        },\r\n                        options:{\r\n                        }\r\n                    };\r\n                }\r\n                \r\n                //initialize hooks object.\r\n                if(typeof instance.hooks !== 'object'){\r\n                    instance.hooks = {};\r\n                }\r\n\r\n                //copy buttons defintion\r\n                var buttonsDefinition = [];\r\n                if(Array.isArray(setup.buttons)){\r\n                    for(var b=0;b<setup.buttons.length;b+=1){\r\n                        var ref  = setup.buttons[b],\r\n                            cpy = {};\r\n                        for (var i in ref) {\r\n                            if (ref.hasOwnProperty(i)) {\r\n                                cpy[i] = ref[i];\r\n                            }\r\n                        }\r\n                        buttonsDefinition.push(cpy);\r\n                    }\r\n                }\r\n\r\n                var internal = instance.__internal = {\r\n                    /**\r\n                     * Flag holding the open state of the dialog\r\n                     * \r\n                     * @type {Boolean}\r\n                     */\r\n                    isOpen:false,\r\n                    /**\r\n                     * Active element is the element that will receive focus after\r\n                     * closing the dialog. It defaults as the body tag, but gets updated\r\n                     * to the last focused element before the dialog was opened.\r\n                     *\r\n                     * @type {Node}\r\n                     */\r\n                    activeElement:document.body,\r\n                    timerIn:undefined,\r\n                    timerOut:undefined,\r\n                    buttons: buttonsDefinition,\r\n                    focus: setup.focus,\r\n                    options: {\r\n                        title: undefined,\r\n                        modal: undefined,\r\n                        basic:undefined,\r\n                        frameless:undefined,\r\n                        defaultFocusOff:undefined,\r\n                        pinned: undefined,\r\n                        movable: undefined,\r\n                        moveBounded:undefined,\r\n                        resizable: undefined,\r\n                        autoReset: undefined,\r\n                        closable: undefined,\r\n                        closableByDimmer: undefined,\r\n                        invokeOnCloseOff:undefined,\r\n                        maximizable: undefined,\r\n                        startMaximized: undefined,\r\n                        pinnable: undefined,\r\n                        transition: undefined,\r\n                        transitionOff: undefined,\r\n                        padding:undefined,\r\n                        overflow:undefined,\r\n                        onshow:undefined,\r\n                        onclosing:undefined,\r\n                        onclose:undefined,\r\n                        onfocus:undefined,\r\n                        onmove:undefined,\r\n                        onmoved:undefined,\r\n                        onresize:undefined,\r\n                        onresized:undefined,\r\n                        onmaximize:undefined,\r\n                        onmaximized:undefined,\r\n                        onrestore:undefined,\r\n                        onrestored:undefined\r\n                    },\r\n                    resetHandler:undefined,\r\n                    beginMoveHandler:undefined,\r\n                    beginResizeHandler:undefined,\r\n                    bringToFrontHandler:undefined,\r\n                    modalClickHandler:undefined,\r\n                    buttonsClickHandler:undefined,\r\n                    commandsClickHandler:undefined,\r\n                    transitionInHandler:undefined,\r\n                    transitionOutHandler:undefined,\r\n                    destroy:undefined\r\n                };\r\n\r\n                var elements = {};\r\n                //root node\r\n                elements.root = document.createElement('div');\r\n                //prevent FOUC in case of async styles loading.\r\n                elements.root.style.display = 'none';\r\n                elements.root.className = classes.base + ' ' + classes.hidden + ' ';\r\n\r\n                elements.root.innerHTML = templates.dimmer + templates.modal;\r\n                \r\n                //dimmer\r\n                elements.dimmer = elements.root.firstChild;\r\n\r\n                //dialog\r\n                elements.modal = elements.root.lastChild;\r\n                elements.modal.innerHTML = templates.dialog;\r\n                elements.dialog = elements.modal.firstChild;\r\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\r\n\r\n                //reset links\r\n                elements.reset = [];\r\n                elements.reset.push(elements.dialog.firstChild);\r\n                elements.reset.push(elements.dialog.lastChild);\r\n                \r\n                //commands\r\n                elements.commands = {};\r\n                elements.commands.container = elements.reset[0].nextSibling;\r\n                elements.commands.pin = elements.commands.container.firstChild;\r\n                elements.commands.maximize = elements.commands.pin.nextSibling;\r\n                elements.commands.close = elements.commands.maximize.nextSibling;\r\n                \r\n                //header\r\n                elements.header = elements.commands.container.nextSibling;\r\n\r\n                //body\r\n                elements.body = elements.header.nextSibling;\r\n                elements.body.innerHTML = templates.content;\r\n                elements.content = elements.body.firstChild;\r\n\r\n                //footer\r\n                elements.footer = elements.body.nextSibling;\r\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\r\n                \r\n                //resize handle\r\n                elements.resizeHandle = elements.footer.nextSibling;\r\n\r\n                //buttons\r\n                elements.buttons = {};\r\n                elements.buttons.auxiliary = elements.footer.firstChild;\r\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\r\n                elements.buttons.primary.innerHTML = templates.button;\r\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\r\n                //remove button template\r\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\r\n                               \r\n                for(var x=0; x < instance.__internal.buttons.length; x+=1) {\r\n                    var button = instance.__internal.buttons[x];\r\n                    \r\n                    // add to the list of used keys.\r\n                    if(usedKeys.indexOf(button.key) < 0){\r\n                        usedKeys.push(button.key);\r\n                    }\r\n\r\n                    button.element = elements.buttonTemplate.cloneNode();\r\n                    button.element.innerHTML = button.text;\r\n                    if(typeof button.className === 'string' &&  button.className !== ''){\r\n                        addClass(button.element, button.className);\r\n                    }\r\n                    for(var key in button.attrs){\r\n                        if(key !== 'className' && button.attrs.hasOwnProperty(key)){\r\n                            button.element.setAttribute(key, button.attrs[key]);\r\n                        }\r\n                    }\r\n                    if(button.scope === 'auxiliary'){\r\n                        elements.buttons.auxiliary.appendChild(button.element);\r\n                    }else{\r\n                        elements.buttons.primary.appendChild(button.element);\r\n                    }\r\n                }\r\n                //make elements pubic\r\n                instance.elements = elements;\r\n                \r\n                //save event handlers delegates\r\n                internal.resetHandler = delegate(instance, onReset);\r\n                internal.beginMoveHandler = delegate(instance, beginMove);\r\n                internal.beginResizeHandler = delegate(instance, beginResize);\r\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\r\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\r\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\r\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\r\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\r\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\r\n\r\n                //settings\r\n                for(var opKey in internal.options){\r\n                    if(setup.options[opKey] !== undefined){\r\n                        // if found in user options\r\n                        instance.set(opKey, setup.options[opKey]);\r\n                    }else if(alertify.defaults.hasOwnProperty(opKey)) {\r\n                        // else if found in defaults options\r\n                        instance.set(opKey, alertify.defaults[opKey]);\r\n                    }else if(opKey === 'title' ) {\r\n                        // else if title key, use alertify.defaults.glossary\r\n                        instance.set(opKey, alertify.defaults.glossary[opKey]);\r\n                    }\r\n                }\r\n\r\n                // allow dom customization\r\n                if(typeof instance.build === 'function'){\r\n                    instance.build();\r\n                }\r\n\r\n                //invoke postinit global hook\r\n                alertify.defaults.hooks.postinit(instance);\r\n            }\r\n\r\n            //add to the end of the DOM tree.\r\n            document.body.appendChild(instance.elements.root);\r\n        }\r\n\r\n        /**\r\n         * Helper: maintains scroll position\r\n         *\r\n         */\r\n        var scrollX, scrollY;\r\n        function saveScrollPosition(){\r\n            scrollX = getScrollLeft();\r\n            scrollY = getScrollTop();\r\n        }\r\n        function restoreScrollPosition(){\r\n            window.scrollTo(scrollX, scrollY);\r\n        }\r\n\r\n        /**\r\n         * Helper: adds/removes no-overflow class from body\r\n         *\r\n         */\r\n        function ensureNoOverflow(){\r\n            var requiresNoOverflow = 0;\r\n            for(var x=0;x<openDialogs.length;x+=1){\r\n                var instance = openDialogs[x];\r\n                if(instance.isModal() || instance.isMaximized()){\r\n                    requiresNoOverflow+=1;\r\n                }\r\n            }\r\n            if(requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0){\r\n                //last open modal or last maximized one\r\n                removeClass(document.body, classes.noOverflow);\r\n                preventBodyShift(false);\r\n            }else if(requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0){\r\n                //first open modal or first maximized one\r\n                preventBodyShift(true);\r\n                addClass(document.body, classes.noOverflow);\r\n            }\r\n        }\r\n        var top = '', topScroll = 0;\r\n        /**\r\n         * Helper: prevents body shift.\r\n         *\r\n         */\r\n        function preventBodyShift(add){\r\n            if(alertify.defaults.preventBodyShift){\r\n                if(add && document.documentElement.scrollHeight > document.documentElement.clientHeight ){//&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){\r\n                    topScroll = scrollY;\r\n                    top = window.getComputedStyle(document.body).top;\r\n                    addClass(document.body, classes.fixed);\r\n                    document.body.style.top = -scrollY + 'px';\r\n                } else if(!add) {\r\n                    scrollY = topScroll;\r\n                    document.body.style.top = top;\r\n                    removeClass(document.body, classes.fixed);\r\n                    restoreScrollPosition();\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Sets the name of the transition used to show/hide the dialog\r\n         * \r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         */\r\n        function updateTransition(instance, value, oldValue){\r\n            if(typeof oldValue === 'string'){\r\n                removeClass(instance.elements.root,classes.prefix +  oldValue);\r\n            }\r\n            addClass(instance.elements.root, classes.prefix + value);\r\n            reflow = instance.elements.root.offsetWidth;\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog no transition \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateTransitionOff(instance){\r\n            if (instance.get('transitionOff')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.noTransition);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.noTransition);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog display mode\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateDisplayMode(instance){\r\n            if(instance.get('modal')){\r\n\r\n                //make modal\r\n                removeClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    unbindModelessEvents(instance);\r\n\r\n                    //in case a pinned modless dialog was made modal while open.\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }else{\r\n                //make modelss\r\n                addClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    bindModelessEvents(instance);\r\n\r\n                    //in case pin/unpin was called while a modal is open\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog basic view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateBasicMode(instance){\r\n            if (instance.get('basic')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.basic);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.basic);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog frameless view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateFramelessMode(instance){\r\n            if (instance.get('frameless')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.frameless);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.frameless);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n         *\r\n         * @param {Event} event Focus event\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bringToFront(event, instance){\r\n            \r\n            // Do not bring to front if preceeded by an open modal\r\n            var index = openDialogs.indexOf(instance);\r\n            for(var x=index+1;x<openDialogs.length;x+=1){\r\n                if(openDialogs[x].isModal()){\r\n                    return;\r\n                }\r\n            }\r\n\t\t\t\r\n            // Bring to front by making it the last child.\r\n            if(document.body.lastChild !== instance.elements.root){\r\n                document.body.appendChild(instance.elements.root);\r\n                //also make sure its at the end of the list\r\n                openDialogs.splice(openDialogs.indexOf(instance),1);\r\n                openDialogs.push(instance);\r\n                setFocus(instance);\r\n            }\r\n\t\t\t\r\n            return false;\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{undefined}\t\r\n         */\r\n        function optionUpdated(instance, option, oldValue, newValue){\r\n            switch(option){\r\n            case 'title':\r\n                instance.setHeader(newValue);\r\n                break;\r\n            case 'modal':\r\n                updateDisplayMode(instance);\r\n                break;\r\n            case 'basic':\r\n                updateBasicMode(instance);\r\n                break;\r\n            case 'frameless':\r\n                updateFramelessMode(instance);\r\n                break;\r\n            case 'pinned':\r\n                updatePinned(instance);\r\n                break;\r\n            case 'closable':\r\n                updateClosable(instance);\r\n                break;\r\n            case 'maximizable':\r\n                updateMaximizable(instance);\r\n                break;\r\n            case 'pinnable':\r\n                updatePinnable(instance);\r\n                break;\r\n            case 'movable':\r\n                updateMovable(instance);\r\n                break;\r\n            case 'resizable':\r\n                updateResizable(instance);\r\n                break;\r\n            case 'padding':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noPadding);\r\n                }else if(instance.elements.root.className.indexOf(classes.noPadding) < 0){\r\n                    addClass(instance.elements.root, classes.noPadding);\r\n                }\r\n                break;\r\n            case 'overflow':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noOverflow);\r\n                }else if(instance.elements.root.className.indexOf(classes.noOverflow) < 0){\r\n                    addClass(instance.elements.root, classes.noOverflow);\r\n                }\r\n                break;\r\n            case 'transition':\r\n                updateTransition(instance,newValue, oldValue);\r\n                break;\r\n            case 'transitionOff':\r\n                updateTransitionOff(instance);\r\n                break;\r\n            }\r\n\r\n            // internal on option updated event\r\n            if(typeof instance.hooks.onupdate === 'function'){\r\n                instance.hooks.onupdate.call(instance, option, oldValue, newValue);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Object} obj The object to set/get a value on/from.\r\n         * @param {Function} callback The callback function to call if the key was found.\r\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{Object} result object \r\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n         *\t\tGET: \r\n         *\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t- value: the property value.\r\n         *\t\tSET:\r\n         *\t\t- items: a list of key value pairs of the properties being set.\r\n         *\t\t\t\teach contains:\r\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t\t\t\t- key: the property key.\r\n         *\t\t\t\t\t- value: the property value.\r\n         */\r\n        function update(instance, obj, callback, key, value){\r\n            var result = {op:undefined, items: [] };\r\n            if(typeof value === 'undefined' && typeof key === 'string') {\r\n                //get\r\n                result.op = 'get';\r\n                if(obj.hasOwnProperty(key)){\r\n                    result.found = true;\r\n                    result.value = obj[key];\r\n                }else{\r\n                    result.found = false;\r\n                    result.value = undefined;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                var old;\r\n                //set\r\n                result.op = 'set';\r\n                if(typeof key === 'object'){\r\n                    //set multiple\r\n                    var args = key;\r\n                    for (var prop in args) {\r\n                        if (obj.hasOwnProperty(prop)) {\r\n                            if(obj[prop] !== args[prop]){\r\n                                old = obj[prop];\r\n                                obj[prop] = args[prop];\r\n                                callback.call(instance,prop, old, args[prop]);\r\n                            }\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':true});\r\n                        }else{\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':false});\r\n                        }\r\n                    }\r\n                } else if (typeof key === 'string'){\r\n                    //set single\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if(obj[key] !== value){\r\n                            old  = obj[key];\r\n                            obj[key] = value;\r\n                            callback.call(instance,key, old, value);\r\n                        }\r\n                        result.items.push({'key': key, 'value': value , 'found':true});\r\n\r\n                    }else{\r\n                        result.items.push({'key': key, 'value': value , 'found':false});\r\n                    }\r\n                } else {\r\n                    //invalid params\r\n                    throw new Error('args must be a string or object');\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n        /**\r\n         * Triggers a close event.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function triggerClose(instance) {\r\n            var found;\r\n            triggerCallback(instance, function (button) {\r\n                return found = instance.get('invokeOnCloseOff') !== true && (button.invokeOnClose === true);\r\n            });\r\n            //none of the buttons registered as onclose callback\r\n            //close the dialog\r\n            if (!found && instance.isOpen()) {\r\n                instance.close();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Dialogs commands event handler, attached to the dialog commands element.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function commandsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            switch (target) {\r\n            case instance.elements.commands.pin:\r\n                if (!instance.isPinned()) {\r\n                    pin(instance);\r\n                } else {\r\n                    unpin(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.maximize:\r\n                if (!instance.isMaximized()) {\r\n                    maximize(instance);\r\n                } else {\r\n                    restore(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.close:\r\n                triggerClose(instance);\r\n                break;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Helper: pins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dialog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function pin(instance) {\r\n            //pin the dialog\r\n            instance.set('pinned', true);\r\n        }\r\n\r\n        /**\r\n         * Helper: unpins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function unpin(instance) {\r\n            //unpin the dialog \r\n            instance.set('pinned', false);\r\n        }\r\n\r\n\r\n        /**\r\n         * Helper: enlarges the dialog to fill the entire screen.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function maximize(instance) {\r\n            // allow custom `onmaximize` method\r\n            dispatchEvent('onmaximize', instance);\r\n            //maximize the dialog \r\n            addClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onmaximized` method\r\n            dispatchEvent('onmaximized', instance);\r\n        }\r\n\r\n        /**\r\n         * Helper: returns the dialog to its former size.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function restore(instance) {\r\n            // allow custom `onrestore` method\r\n            dispatchEvent('onrestore', instance);\r\n            //maximize the dialog \r\n            removeClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onrestored` method\r\n            dispatchEvent('onrestored', instance);\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinnable(instance) {\r\n            if (instance.get('pinnable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.pinnable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.pinnable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Helper: Fixes the absolutly positioned modal div position.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function addAbsPositionFix(instance) {\r\n            var scrollLeft = getScrollLeft();\r\n            instance.elements.modal.style.marginTop = getScrollTop() + 'px';\r\n            instance.elements.modal.style.marginLeft = scrollLeft + 'px';\r\n            instance.elements.modal.style.marginRight = (-scrollLeft) + 'px';\r\n        }\r\n\r\n        /**\r\n         * Helper: Removes the absolutly positioned modal div position fix.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function removeAbsPositionFix(instance) {\r\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\r\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\r\n            instance.elements.modal.style.marginTop = '';\r\n            instance.elements.modal.style.marginLeft = '';\r\n            instance.elements.modal.style.marginRight = '';\r\n\r\n            if (instance.isOpen()) {\r\n                var top = 0,\r\n                    left = 0\r\n                ;\r\n                if (instance.elements.dialog.style.top !== '') {\r\n                    top = parseInt(instance.elements.dialog.style.top, 10);\r\n                }\r\n                instance.elements.dialog.style.top = (top + (marginTop - getScrollTop())) + 'px';\r\n\r\n                if (instance.elements.dialog.style.left !== '') {\r\n                    left = parseInt(instance.elements.dialog.style.left, 10);\r\n                }\r\n                instance.elements.dialog.style.left = (left + (marginLeft - getScrollLeft())) + 'px';\r\n            }\r\n        }\r\n        /**\r\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateAbsPositionFix(instance) {\r\n            // if modeless and unpinned add fix\r\n            if (!instance.get('modal') && !instance.get('pinned')) {\r\n                addAbsPositionFix(instance);\r\n            } else {\r\n                removeAbsPositionFix(instance);\r\n            }\r\n        }\r\n        /**\r\n         * Toggles the dialog position lock | modeless only.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to make it modal, false otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinned(instance) {\r\n            if (instance.get('pinned')) {\r\n                removeClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen()) {\r\n                    removeAbsPositionFix(instance);\r\n                }\r\n            } else {\r\n                addClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen() && !instance.isModal()) {\r\n                    addAbsPositionFix(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMaximizable(instance) {\r\n            if (instance.get('maximizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.maximizable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.maximizable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the close box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateClosable(instance) {\r\n            if (instance.get('closable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.closable);\r\n                bindClosableEvents(instance);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.closable);\r\n                unbindClosableEvents(instance);\r\n            }\r\n        }\r\n\r\n        \r\n        var cancelClick = false,// flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\r\n            modalClickHandlerTS=0 // stores last click timestamp to prevent executing the handler twice on double click.\r\n            ;\r\n\r\n        /**\r\n         * Helper: closes the modal dialog when clicking the modal\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function modalClickHandler(event, instance) {\r\n            if(event.timeStamp - modalClickHandlerTS > 200 && (modalClickHandlerTS = event.timeStamp) && !cancelClick){\r\n                var target = event.srcElement || event.target;\r\n                if (instance.get('closableByDimmer') === true && target === instance.elements.modal) {\r\n                    triggerClose(instance);\r\n                }\r\n            }\r\n            cancelClick = false;\r\n        }\r\n\r\n        // stores last call timestamp to prevent triggering the callback twice.\r\n        var callbackTS = 0;\r\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\r\n        var cancelKeyup = false;\r\n        /** \r\n         * Helper: triggers a button callback\r\n         *\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * @param {Function}\tCallback to check which button triggered the event.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function triggerCallback(instance, check) {\r\n            if(Date.now() - callbackTS > 200 && (callbackTS = Date.now())){\r\n                for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\r\n                    var button = instance.__internal.buttons[idx];\r\n                    if (!button.element.disabled && check(button)) {\r\n                        var closeEvent = createCloseEvent(idx, button);\r\n                        if (typeof instance.callback === 'function') {\r\n                            instance.callback.apply(instance, [closeEvent]);\r\n                        }\r\n                        //close the dialog only if not canceled.\r\n                        if (closeEvent.cancel === false) {\r\n                            instance.close();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clicks event handler, attached to the dialog footer.\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function buttonsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            triggerCallback(instance, function (button) {\r\n                // if this button caused the click, cancel keyup event\r\n                return button.element === target && (cancelKeyup = true);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Keyup event handler, attached to the document.body\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function keyupHandler(event) {\r\n            //hitting enter while button has focus will trigger keyup too.\r\n            //ignore if handled by clickHandler\r\n            if (cancelKeyup) {\r\n                cancelKeyup = false;\r\n                return;\r\n            }\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\r\n                triggerClose(instance);\r\n                return false;\r\n            }else if (usedKeys.indexOf(keyCode) > -1) {\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n        * Keydown event handler, attached to the document.body\r\n        *\r\n        * @param {Event}\t\tDOM event object.\r\n        * @param {Object}\t\tThe dilog instance.\r\n        * \r\n        * @return {undefined}\r\n        */\r\n        function keydownHandler(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\r\n                var buttons = instance.__internal.buttons;\r\n                for (var x = 0; x < buttons.length; x += 1) {\r\n                    if (document.activeElement === buttons[x].element) {\r\n                        switch (keyCode) {\r\n                        case keys.LEFT:\r\n                            buttons[(x || buttons.length) - 1].element.focus();\r\n                            return;\r\n                        case keys.RIGHT:\r\n                            buttons[(x + 1) % buttons.length].element.focus();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Sets focus to proper dialog element\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function setFocus(instance, resetTarget) {\r\n            // reset target has already been determined.\r\n            if (resetTarget) {\r\n                resetTarget.focus();\r\n            } else {\r\n                // current instance focus settings\r\n                var focus = instance.__internal.focus;\r\n                // the focus element.\r\n                var element = focus.element;\r\n\r\n                switch (typeof focus.element) {\r\n                // a number means a button index\r\n                case 'number':\r\n                    if (instance.__internal.buttons.length > focus.element) {\r\n                        //in basic view, skip focusing the buttons.\r\n                        if (instance.get('basic') === true) {\r\n                            element = instance.elements.reset[0];\r\n                        } else {\r\n                            element = instance.__internal.buttons[focus.element].element;\r\n                        }\r\n                    }\r\n                    break;\r\n                // a string means querySelector to select from dialog body contents.\r\n                case 'string':\r\n                    element = instance.elements.body.querySelector(focus.element);\r\n                    break;\r\n                // a function should return the focus element.\r\n                case 'function':\r\n                    element = focus.element.call(instance);\r\n                    break;\r\n                }\r\n\r\n                // if no focus element, default to first reset element.\r\n                if (instance.get('defaultFocusOff') === true || ((typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0)) {\r\n                    element = instance.elements.reset[0];\r\n                }\r\n                // focus\r\n                if (element && element.focus) {\r\n                    element.focus();\r\n                    // if selectable\r\n                    if (focus.select && element.select) {\r\n                        element.select();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Focus event handler, attached to document.body and dialogs own reset links.\r\n         * handles the focus for modal dialogs only.\r\n         *\r\n         * @param {Event} event DOM focus event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function onReset(event, instance) {\r\n\r\n            // should work on last modal if triggered from document.body \r\n            if (!instance) {\r\n                for (var x = openDialogs.length - 1; x > -1; x -= 1) {\r\n                    if (openDialogs[x].isModal()) {\r\n                        instance = openDialogs[x];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(instance) {\r\n                // if modal\r\n                if (instance.isModal()) {\r\n                    // determine reset target to enable forward/backward tab cycle.\r\n                    var firstReset = instance.elements.reset[0],\r\n                        lastReset = instance.elements.reset[1],\r\n                        lastFocusedElement = event.relatedTarget,\r\n                        within = instance.elements.root.contains(lastFocusedElement),\r\n                        target = event.srcElement || event.target,\r\n                        resetTarget;\r\n\r\n                    //if the previous focused element element was outside the modal do nthing\r\n                    if(  /*first show */\r\n                        (target === firstReset && !within) ||\r\n                         /*focus cycle */\r\n                        (target === lastReset && lastFocusedElement === firstReset)){\r\n                        return;\r\n                    }else if(target === lastReset || target === document.body){\r\n                        resetTarget = firstReset;\r\n                    }else if(target === firstReset && lastFocusedElement === lastReset){\r\n                        resetTarget = findTabbable(instance);\r\n                    }else if(target === firstReset && within){\r\n                        resetTarget = findTabbable(instance, true);\r\n                    }\r\n                    // focus\r\n                    setFocus(instance, resetTarget);\r\n                }\r\n            }\r\n        }\r\n        function findTabbable(instance, last){\r\n            var tabbables = [].slice.call(instance.elements.dialog.querySelectorAll(defaults.tabbable));\r\n            if(last){\r\n                tabbables.reverse();\r\n            }\r\n            for(var x=0;x<tabbables.length;x+=1){\r\n                var tabbable = tabbables[x];\r\n                //check if visible\r\n                if(!!(tabbable.offsetParent || tabbable.offsetWidth || tabbable.offsetHeight || tabbable.getClientRects().length)){\r\n                    return tabbable;\r\n                }\r\n            }\r\n        }\r\n        function recycleTab(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            if (instance && event.shiftKey && event.keyCode === keys.TAB) {\r\n                instance.elements.reset[1].focus();\r\n            }\r\n        }\r\n        /**\r\n         * Transition in transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionInEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerIn);\r\n\r\n            // once transition is complete, set focus\r\n            setFocus(instance);\r\n\r\n            // allow handling key up after transition ended.\r\n            cancelKeyup = false;\r\n\r\n            // allow custom `onfocus` method\r\n            dispatchEvent('onfocus', instance);\r\n\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            removeClass(instance.elements.root, classes.animationIn);\r\n        }\r\n\r\n        /**\r\n         * Transition out transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionOutEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerOut);\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // reset move updates\r\n            resetMove(instance);\r\n            // reset resize updates\r\n            resetResize(instance);\r\n\r\n            // restore if maximized\r\n            if (instance.isMaximized() && !instance.get('startMaximized')) {\r\n                restore(instance);\r\n            }\r\n\r\n            //destory the instance\r\n            if (typeof instance.__internal.destroy === 'function') {\r\n                instance.__internal.destroy.apply(instance);\r\n            }\r\n        }\r\n        /* Controls moving a dialog around */\r\n        //holde the current moving instance\r\n        var movable = null,\r\n            //holds the current X offset when move starts\r\n            offsetX = 0,\r\n            //holds the current Y offset when move starts\r\n            offsetY = 0,\r\n            xProp = 'pageX',\r\n            yProp = 'pageY',\r\n            bounds = null,\r\n            refreshTop = false,\r\n            moveDelegate = null\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element top/left coordinates\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElement(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n           \r\n            element.style.left = left + 'px';\r\n            element.style.top = top + 'px';\r\n           \r\n        }\r\n        /**\r\n         * Helper: sets the element top/left coordinates within screen bounds\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElementBounded(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n            \r\n            element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + 'px';\r\n            if(refreshTop){\r\n                element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + 'px';\r\n            }else{\r\n                element.style.top = Math.max(bounds.minTop, top) + 'px';\r\n            }\r\n        }\r\n            \r\n\r\n        /**\r\n         * Triggers the start of a move event, attached to the header element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginMove(event, instance) {\r\n            if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\r\n                var eventSrc, left=0, top=0;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                    xProp = 'clientX';\r\n                    yProp = 'clientY';\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n\r\n                if (eventSrc) {\r\n\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n\r\n                    if (element.style.left) {\r\n                        left = parseInt(element.style.left, 10);\r\n                    }\r\n\r\n                    if (element.style.top) {\r\n                        top = parseInt(element.style.top, 10);\r\n                    }\r\n                    \r\n                    offsetX = eventSrc[xProp] - left;\r\n                    offsetY = eventSrc[yProp] - top;\r\n\r\n                    if(instance.isModal()){\r\n                        offsetY += instance.elements.modal.scrollTop;\r\n                    }else if(instance.isPinned()){\r\n                        offsetY -= document.body.scrollTop;\r\n                    }\r\n                    \r\n                    if(instance.get('moveBounded')){\r\n                        var current = element,\r\n                            offsetLeft = -left,\r\n                            offsetTop = -top;\r\n                        \r\n                        //calc offset\r\n                        do {\r\n                            offsetLeft += current.offsetLeft;\r\n                            offsetTop += current.offsetTop;\r\n                        } while (current = current.offsetParent);\r\n                        \r\n                        bounds = {\r\n                            maxLeft : offsetLeft,\r\n                            minLeft : -offsetLeft,\r\n                            maxTop  : document.documentElement.clientHeight - element.clientHeight - offsetTop,\r\n                            minTop  : -offsetTop\r\n                        };\r\n                        moveDelegate = moveElementBounded;\r\n                    }else{\r\n                        bounds = null;\r\n                        moveDelegate = moveElement;\r\n                    }\r\n                    \r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', instance);\r\n\r\n                    refreshTop = !instance.isModal() && instance.isPinned();\r\n                    movable = instance;\r\n                    moveDelegate(eventSrc, element);\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual move handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function move(event) {\r\n            if (movable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    moveDelegate(eventSrc, movable.elements.dialog);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a move event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endMove() {\r\n            if (movable) {\r\n                var instance = movable;\r\n                movable = bounds = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                // allow custom `onmoved` method\r\n                dispatchEvent('onmoved', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by moving the element to its original state,\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetMove(instance) {\r\n            movable = null;\r\n            var element = instance.elements.dialog;\r\n            element.style.left = element.style.top = '';\r\n        }\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMovable(instance) {\r\n            if (instance.get('movable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    bindMovableEvents(instance);\r\n                }\r\n            } else {\r\n\r\n                //reset\r\n                resetMove(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    unbindMovableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* Controls moving a dialog around */\r\n        //holde the current instance being resized\t\t\r\n        var resizable = null,\r\n            //holds the staring left offset when resize starts.\r\n            startingLeft = Number.Nan,\r\n            //holds the staring width when resize starts.\r\n            startingWidth = 0,\r\n            //holds the initial width when resized for the first time.\r\n            minWidth = 0,\r\n            //holds the offset of the resize handle.\r\n            handleOffset = 0\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n         *\r\n         * @param {Event} event\tDOM mousemove event object.\r\n         * @param {Node} element The element being moved.\r\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resizeElement(event, element, pageRelative) {\r\n\r\n            //calculate offsets from 0,0\r\n            var current = element;\r\n            var offsetLeft = 0;\r\n            var offsetTop = 0;\r\n            do {\r\n                offsetLeft += current.offsetLeft;\r\n                offsetTop += current.offsetTop;\r\n            } while (current = current.offsetParent);\r\n\r\n            // determine X,Y coordinates.\r\n            var X, Y;\r\n            if (pageRelative === true) {\r\n                X = event.pageX;\r\n                Y = event.pageY;\r\n            } else {\r\n                X = event.clientX;\r\n                Y = event.clientY;\r\n            }\r\n            // rtl handling\r\n            var isRTL = isRightToLeft();\r\n            if (isRTL) {\r\n                // reverse X \r\n                X = document.body.offsetWidth - X;\r\n                // if has a starting left, calculate offsetRight\r\n                if (!isNaN(startingLeft)) {\r\n                    offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\r\n                }\r\n            }\r\n\r\n            // set width/height\r\n            element.style.height = (Y - offsetTop + handleOffset) + 'px';\r\n            element.style.width = (X - offsetLeft + handleOffset) + 'px';\r\n\r\n            // if the element being resized has a starting left, maintain it.\r\n            // the dialog is centered, divide by half the offset to maintain the margins.\r\n            if (!isNaN(startingLeft)) {\r\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\r\n                if (isRTL) {\r\n                    //negate the diff, why?\r\n                    //when growing it should decrease left\r\n                    //when shrinking it should increase left\r\n                    diff *= -1;\r\n                }\r\n                if (element.offsetWidth > startingWidth) {\r\n                    //growing\r\n                    element.style.left = (startingLeft + diff) + 'px';\r\n                } else if (element.offsetWidth >= minWidth) {\r\n                    //shrinking\r\n                    element.style.left = (startingLeft - diff) + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginResize(event, instance) {\r\n            if (!instance.isMaximized()) {\r\n                var eventSrc;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', instance);\r\n                    \r\n                    resizable = instance;\r\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n                    startingLeft = parseInt(element.style.left, 10);\r\n                    element.style.height = element.offsetHeight + 'px';\r\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = (startingWidth = element.offsetWidth) + 'px';\r\n\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual resize handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resize(event) {\r\n            if (resizable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endResize() {\r\n            if (resizable) {\r\n                var instance = resizable;\r\n                resizable = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                cancelClick = true;\r\n                // allow custom `onresized` method\r\n                dispatchEvent('onresized', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by resizing the element to its original state.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetResize(instance) {\r\n            resizable = null;\r\n            var element = instance.elements.dialog;\r\n            if (element.style.maxWidth === 'none') {\r\n                //clear inline styles.\r\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\r\n                //reset variables.\r\n                startingLeft = Number.Nan;\r\n                startingWidth = minWidth = handleOffset = 0;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateResizable(instance) {\r\n            if (instance.get('resizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    bindResizableEvents(instance);\r\n                }\r\n            } else {\r\n                //reset\r\n                resetResize(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    unbindResizableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Reset move/resize on window resize.\r\n         *\r\n         * @param {Event} event\twindow resize event object.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function windowResize(/*event*/) {\r\n            for (var x = 0; x < openDialogs.length; x += 1) {\r\n                var instance = openDialogs[x];\r\n                if (instance.get('autoReset')) {\r\n                    resetMove(instance);\r\n                    resetResize(instance);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Bind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindEvents(instance) {\r\n            // if first dialog, hook global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                on(window, 'resize', windowResize);\r\n                on(document.body, 'keyup', keyupHandler);\r\n                on(document.body, 'keydown', keydownHandler);\r\n                on(document.body, 'focus', onReset);\r\n\r\n                //move\r\n                on(document.documentElement, 'mousemove', move);\r\n                on(document.documentElement, 'touchmove', move, false, false);\r\n                on(document.documentElement, 'mouseup', endMove);\r\n                on(document.documentElement, 'touchend', endMove);\r\n                //resize\r\n                on(document.documentElement, 'mousemove', resize);\r\n                on(document.documentElement, 'touchmove', resize, false, false);\r\n                on(document.documentElement, 'mouseup', endResize);\r\n                on(document.documentElement, 'touchend', endResize);\r\n            }\r\n\r\n            // common events\r\n            on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            on(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            on(instance.elements.reset[0], 'keydown', recycleTab);\r\n            on(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            //prevent handling key up when dialog is being opened by a key stroke.\r\n            cancelKeyup = true;\r\n            // hook in transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                bindModelessEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                bindResizableEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                bindMovableEvents(instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Unbind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindEvents(instance) {\r\n            // if last dialog, remove global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                off(window, 'resize', windowResize);\r\n                off(document.body, 'keyup', keyupHandler);\r\n                off(document.body, 'keydown', keydownHandler);\r\n                off(document.body, 'focus', onReset);\r\n                //move\r\n                off(document.documentElement, 'mousemove', move);\r\n                off(document.documentElement, 'mouseup', endMove);\r\n                //resize\r\n                off(document.documentElement, 'mousemove', resize);\r\n                off(document.documentElement, 'mouseup', endResize);\r\n            }\r\n\r\n            // common events\r\n            off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            off(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            off(instance.elements.reset[0], 'keydown', recycleTab);\r\n            off(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            // hook out transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                unbindModelessEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                unbindMovableEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                unbindResizableEvents(instance);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Bind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindModelessEvents(instance) {\r\n            on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n        /**\r\n         * Unbind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindModelessEvents(instance) {\r\n            off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindMovableEvents(instance) {\r\n            on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindMovableEvents(instance) {\r\n            off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindResizableEvents(instance) {\r\n            on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindResizableEvents(instance) {\r\n            off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Bind closable events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindClosableEvents(instance) {\r\n            on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind closable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindClosableEvents(instance) {\r\n            off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n        // dialog API\r\n        return {\r\n            __init:initialize,\r\n            /**\r\n             * Check if dialog is currently open\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isOpen: function () {\r\n                return this.__internal.isOpen;\r\n            },\r\n            isModal: function (){\r\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\r\n            },\r\n            isMaximized:function(){\r\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\r\n            },\r\n            isPinned:function(){\r\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\r\n            },\r\n            maximize:function(){\r\n                if(!this.isMaximized()){\r\n                    maximize(this);\r\n                }\r\n                return this;\r\n            },\r\n            restore:function(){\r\n                if(this.isMaximized()){\r\n                    restore(this);\r\n                }\r\n                return this;\r\n            },\r\n            pin:function(){\r\n                if(!this.isPinned()){\r\n                    pin(this);\r\n                }\r\n                return this;\r\n            },\r\n            unpin:function(){\r\n                if(this.isPinned()){\r\n                    unpin(this);\r\n                }\r\n                return this;\r\n            },\r\n            bringToFront:function(){\r\n                bringToFront(null, this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Move the dialog to a specific x/y coordinates\r\n             *\r\n             * @param {Number} x    The new dialog x coordinate in pixels.\r\n             * @param {Number} y    The new dialog y coordinate in pixels.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            moveTo:function(x,y){\r\n                if(!isNaN(x) && !isNaN(y)){\r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', this);\r\n                    \r\n                    var element = this.elements.dialog,\r\n                        current = element,\r\n                        offsetLeft = 0,\r\n                        offsetTop = 0;\r\n                    \r\n                    //subtract existing left,top\r\n                    if (element.style.left) {\r\n                        offsetLeft -= parseInt(element.style.left, 10);\r\n                    }\r\n                    if (element.style.top) {\r\n                        offsetTop -= parseInt(element.style.top, 10);\r\n                    }\r\n                    //calc offset\r\n                    do {\r\n                        offsetLeft += current.offsetLeft;\r\n                        offsetTop += current.offsetTop;\r\n                    } while (current = current.offsetParent);\r\n\r\n                    //calc left, top\r\n                    var left = (x - offsetLeft);\r\n                    var top  = (y - offsetTop);\r\n\r\n                    //// rtl handling\r\n                    if (isRightToLeft()) {\r\n                        left *= -1;\r\n                    }\r\n\r\n                    element.style.left = left + 'px';\r\n                    element.style.top = top + 'px';\r\n                    \r\n                    // allow custom `onmoved` method\r\n                    dispatchEvent('onmoved', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n             * The dialog can be resized to:\r\n             *  A minimum width equal to the initial display width\r\n             *  A minimum height equal to the sum of header/footer heights.\r\n             *\r\n             *\r\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            resizeTo:function(width,height){\r\n                var w = parseFloat(width),\r\n                    h = parseFloat(height),\r\n                    regex = /(\\d*\\.\\d+|\\d+)%/\r\n                ;\r\n\r\n                if(!isNaN(w) && !isNaN(h) && this.get('resizable') === true){\r\n                    \r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', this);\r\n                    \r\n                    if(('' + width).match(regex)){\r\n                        w = w / 100 * document.documentElement.clientWidth ;\r\n                    }\r\n\r\n                    if(('' + height).match(regex)){\r\n                        h = h / 100 * document.documentElement.clientHeight;\r\n                    }\r\n\r\n                    var element = this.elements.dialog;\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = w + 'px';\r\n                    element.style.height = h + 'px';\r\n                    \r\n                    // allow custom `onresized` method\r\n                    dispatchEvent('onresized', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options \r\n             *\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting : function (key, value) {\r\n                var self = this;\r\n                var result = update(this, this.__internal.options, function(k,o,n){ optionUpdated(self,k,o,n); }, key, value);\r\n                if(result.op === 'get'){\r\n                    if(result.found){\r\n                        return result.value;\r\n                    }else if(typeof this.settings !== 'undefined'){\r\n                        return update(this, this.settings, this.settingUpdated || function(){}, key, value).value;\r\n                    }else{\r\n                        return undefined;\r\n                    }\r\n                }else if(result.op === 'set'){\r\n                    if(result.items.length > 0){\r\n                        var callback = this.settingUpdated || function(){};\r\n                        for(var x=0;x<result.items.length;x+=1){\r\n                            var item = result.items[x];\r\n                            if(!item.found && typeof this.settings !== 'undefined'){\r\n                                update(this, this.settings, callback, item.key, item.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set:function(key, value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n            * Sets dialog header\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setHeader:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n            * Sets dialog contents\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setContent:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Show the dialog as modal\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            showModal: function(className){\r\n                return this.show(true, className);\r\n            },\r\n            /**\r\n             * Show the dialog\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            show: function (modal, className) {\r\n                \r\n                // ensure initialization\r\n                initialize(this);\r\n\r\n                if ( !this.__internal.isOpen ) {\r\n\r\n                    // add to open dialogs\r\n                    this.__internal.isOpen = true;\r\n                    openDialogs.push(this);\r\n\r\n                    // save last focused element\r\n                    if(alertify.defaults.maintainFocus){\r\n                        this.__internal.activeElement = document.activeElement;\r\n                    }\r\n\r\n                    // set tabindex attribute on body element this allows script to give it focusable\r\n                    if(!document.body.hasAttribute('tabindex')) {\r\n                        document.body.setAttribute( 'tabindex', tabindex = '0');\r\n                    }\r\n\r\n                    //allow custom dom manipulation updates before showing the dialog.\r\n                    if(typeof this.prepare === 'function'){\r\n                        this.prepare();\r\n                    }\r\n\r\n                    bindEvents(this);\r\n\r\n                    if(modal !== undefined){\r\n                        this.set('modal', modal);\r\n                    }\r\n\r\n                    //save scroll to prevent document jump\r\n                    saveScrollPosition();\r\n\r\n                    ensureNoOverflow();\r\n\r\n                    // allow custom dialog class on show\r\n                    if(typeof className === 'string' && className !== ''){\r\n                        this.__internal.className = className;\r\n                        addClass(this.elements.root, className);\r\n                    }\r\n\r\n                    // maximize if start maximized\r\n                    if ( this.get('startMaximized')) {\r\n                        this.maximize();\r\n                    }else if(this.isMaximized()){\r\n                        restore(this);\r\n                    }\r\n\r\n                    updateAbsPositionFix(this);\r\n                    this.elements.root.removeAttribute('style');\r\n                    removeClass(this.elements.root, classes.animationOut);\r\n                    addClass(this.elements.root, classes.animationIn);\r\n\r\n                    // set 1s fallback in case transition event doesn't fire\r\n                    clearTimeout( this.__internal.timerIn);\r\n                    this.__internal.timerIn = setTimeout( this.__internal.transitionInHandler, transition.supported ? 1000 : 100 );\r\n\r\n                    if(isSafari){\r\n                        // force desktop safari reflow\r\n                        var root = this.elements.root;\r\n                        root.style.display  = 'none';\r\n                        setTimeout(function(){root.style.display  = 'block';}, 0);\r\n                    }\r\n\r\n                    //reflow\r\n                    reflow = this.elements.root.offsetWidth;\r\n                  \r\n                    // show dialog\r\n                    removeClass(this.elements.root, classes.hidden);\r\n\r\n                    //restore scroll to prevent document jump\r\n                    restoreScrollPosition();\r\n\r\n                    // internal on show event\r\n                    if(typeof this.hooks.onshow === 'function'){\r\n                        this.hooks.onshow.call(this);\r\n                    }\r\n\r\n                    // allow custom `onshow` method\r\n                    dispatchEvent('onshow', this);\r\n\r\n                }else{\r\n                    // reset move updates\r\n                    resetMove(this);\r\n                    // reset resize updates\r\n                    resetResize(this);\r\n                    // shake the dialog to indicate its already open\r\n                    addClass(this.elements.dialog, classes.shake);\r\n                    var self = this;\r\n                    setTimeout(function(){\r\n                        removeClass(self.elements.dialog, classes.shake);\r\n                    },200);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close the dialog\r\n             *\r\n             * @return {Object} The dialog instance\r\n             */\r\n            close: function () {\r\n                if (this.__internal.isOpen ) {\r\n                    // custom `onclosing` event\r\n                    if(dispatchEvent('onclosing', this) !== false){\r\n\r\n                        unbindEvents(this);\r\n\r\n                        removeClass(this.elements.root, classes.animationIn);\r\n                        addClass(this.elements.root, classes.animationOut);\r\n\r\n                        // set 1s fallback in case transition event doesn't fire\r\n                        clearTimeout( this.__internal.timerOut );\r\n                        this.__internal.timerOut = setTimeout( this.__internal.transitionOutHandler, transition.supported ? 1000 : 100 );\r\n                        // hide dialog\r\n                        addClass(this.elements.root, classes.hidden);\r\n                        //reflow\r\n                        reflow = this.elements.modal.offsetWidth;\r\n\r\n                        // return focus to the last active element\r\n                        if (alertify.defaults.maintainFocus && this.__internal.activeElement) {\r\n                            this.__internal.activeElement.focus();\r\n                            this.__internal.activeElement = null;\r\n                        }\r\n\r\n                        // remove custom dialog class on hide\r\n                        if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\r\n                            removeClass(this.elements.root, this.__internal.className);\r\n                        }\r\n\r\n                        // internal on close event\r\n                        if(typeof this.hooks.onclose === 'function'){\r\n                            this.hooks.onclose.call(this);\r\n                        }\r\n\r\n                        // allow custom `onclose` method\r\n                        dispatchEvent('onclose', this);\r\n\r\n                        //remove from open dialogs\r\n                        openDialogs.splice(openDialogs.indexOf(this),1);\r\n                        this.__internal.isOpen = false;\r\n\r\n                        ensureNoOverflow();\r\n                    }\r\n\r\n                }\r\n                // last dialog and tab index was set by us, remove it.\r\n                if(!openDialogs.length && tabindex === '0'){\r\n                    document.body.removeAttribute('tabindex');\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close all open dialogs except this.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeOthers:function(){\r\n                alertify.closeAll(this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Destroys this dialog instance\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            destroy:function(){\r\n                if(this.__internal) {\r\n                    if (this.__internal.isOpen ) {\r\n                        //mark dialog for destruction, this will be called on tranistionOut event.\r\n                        this.__internal.destroy = function(){\r\n                            destruct(this, initialize);\r\n                        };\r\n                        //close the dialog to unbind all events.\r\n                        this.close();\r\n                    }else if(!this.__internal.destroy){\r\n                        destruct(this, initialize);\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n        };\r\n\t} () );\r\n    var notifier = (function () {\r\n        var reflow,\r\n            element,\r\n            openInstances = [],\r\n            classes = defaults.notifier.classes,\r\n            baseClass = classes.base;\r\n        /**\r\n         * Helper: initializes the notifier instance\r\n         *\r\n         */\r\n        function initialize(instance) {\r\n\r\n            if (!instance.__internal) {\r\n                instance.__internal = {\r\n                    position: alertify.defaults.notifier.position,\r\n                    delay: alertify.defaults.notifier.delay,\r\n                };\r\n\r\n                element = document.createElement('DIV');\r\n                var transitionOff = 'transitionOff' in defaults.notifier ? defaults.notifier.transitionOff : defaults.transitionOff;\r\n                if(transitionOff){\r\n                    baseClass = classes.base + ' ajs-no-transition';\r\n                }\r\n                updatePosition(instance);\r\n            }\r\n\r\n            //add to DOM tree.\r\n            if (element.parentNode !== document.body) {\r\n                document.body.appendChild(element);\r\n            }\r\n        }\r\n\r\n        function pushInstance(instance) {\r\n            instance.__internal.pushed = true;\r\n            openInstances.push(instance);\r\n        }\r\n        function popInstance(instance) {\r\n            openInstances.splice(openInstances.indexOf(instance), 1);\r\n            instance.__internal.pushed = false;\r\n        }\r\n        /**\r\n         * Helper: update the notifier instance position\r\n         *\r\n         */\r\n        function updatePosition(instance) {\r\n            element.className = baseClass;\r\n            switch (instance.__internal.position) {\r\n            case 'top-right':\r\n                addClass(element, classes.top + ' ' + classes.right);\r\n                break;\r\n            case 'top-left':\r\n                addClass(element, classes.top + ' ' + classes.left);\r\n                break;\r\n            case 'top-center':\r\n                addClass(element, classes.top + ' ' + classes.center);\r\n                break;\r\n            case 'bottom-left':\r\n                addClass(element, classes.bottom + ' ' + classes.left);\r\n                break;\r\n            case 'bottom-center':\r\n                addClass(element, classes.bottom + ' ' + classes.center);\r\n                break;\r\n\r\n            default:\r\n            case 'bottom-right':\r\n                addClass(element, classes.bottom + ' ' + classes.right);\r\n                break;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * creates a new notification message\r\n        *\r\n        * @param  {DOMElement} message\tThe notifier message element\r\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n        *\r\n        * @return {undefined}\r\n        */\r\n        function create(div, callback) {\r\n\r\n            function clickDelegate(event, instance) {\r\n                if(!instance.__internal.closeButton || event.target.getAttribute('data-close') === 'true'){\r\n                    instance.dismiss(true);\r\n                }\r\n            }\r\n\r\n            function transitionDone(event, instance) {\r\n                // unbind event\r\n                off(instance.element, transition.type, transitionDone);\r\n                // remove the message\r\n                element.removeChild(instance.element);\r\n            }\r\n\r\n            function initialize(instance) {\r\n                if (!instance.__internal) {\r\n                    instance.__internal = {\r\n                        pushed: false,\r\n                        delay : undefined,\r\n                        timer: undefined,\r\n                        clickHandler: undefined,\r\n                        transitionEndHandler: undefined,\r\n                        transitionTimeout: undefined\r\n                    };\r\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\r\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\r\n                }\r\n                return instance;\r\n            }\r\n            function clearTimers(instance) {\r\n                clearTimeout(instance.__internal.timer);\r\n                clearTimeout(instance.__internal.transitionTimeout);\r\n            }\r\n            return initialize({\r\n                /* notification DOM element*/\r\n                element: div,\r\n                /*\r\n                 * Pushes a notification message\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                push: function (_content, _wait) {\r\n                    if (!this.__internal.pushed) {\r\n\r\n                        pushInstance(this);\r\n                        clearTimers(this);\r\n\r\n                        var content, wait;\r\n                        switch (arguments.length) {\r\n                        case 0:\r\n                            wait = this.__internal.delay;\r\n                            break;\r\n                        case 1:\r\n                            if (typeof (_content) === 'number') {\r\n                                wait = _content;\r\n                            } else {\r\n                                content = _content;\r\n                                wait = this.__internal.delay;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            content = _content;\r\n                            wait = _wait;\r\n                            break;\r\n                        }\r\n                        this.__internal.closeButton = alertify.defaults.notifier.closeButton;\r\n                        // set contents\r\n                        if (typeof content !== 'undefined') {\r\n                            this.setContent(content);\r\n                        }\r\n                        // append or insert\r\n                        if (notifier.__internal.position.indexOf('top') < 0) {\r\n                            element.appendChild(this.element);\r\n                        } else {\r\n                            element.insertBefore(this.element, element.firstChild);\r\n                        }\r\n                        reflow = this.element.offsetWidth;\r\n                        addClass(this.element, classes.visible);\r\n                        // attach click event\r\n                        on(this.element, 'click', this.__internal.clickHandler);\r\n                        return this.delay(wait);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * {Function} callback function to be invoked before dismissing the notification message.\r\n                 * Remarks: A return value === 'false' will cancel the dismissal\r\n                 *\r\n                 */\r\n                ondismiss: function () { },\r\n                /*\r\n                 * {Function} callback function to be invoked when the message is dismissed.\r\n                 *\r\n                 */\r\n                callback: callback,\r\n                /*\r\n                 * Dismisses the notification message\r\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n                 *\r\n                 */\r\n                dismiss: function (clicked) {\r\n                    if (this.__internal.pushed) {\r\n                        clearTimers(this);\r\n                        if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\r\n                            //detach click event\r\n                            off(this.element, 'click', this.__internal.clickHandler);\r\n                            // ensure element exists\r\n                            if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\r\n                                //transition end or fallback\r\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\r\n                                removeClass(this.element, classes.visible);\r\n\r\n                                // custom callback on dismiss\r\n                                if (typeof this.callback === 'function') {\r\n                                    this.callback.call(this, clicked);\r\n                                }\r\n                            }\r\n                            popInstance(this);\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Delays the notification message dismissal\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                delay: function (wait) {\r\n                    clearTimers(this);\r\n                    this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\r\n                    if (this.__internal.delay > 0) {\r\n                        var  self = this;\r\n                        this.__internal.timer = setTimeout(function () { self.dismiss(); }, this.__internal.delay * 1000);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Sets the notification message contents\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 *\r\n                 */\r\n                setContent: function (content) {\r\n                    if (typeof content === 'string') {\r\n                        clearContents(this.element);\r\n                        this.element.innerHTML = content;\r\n                    } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\r\n                        clearContents(this.element);\r\n                        this.element.appendChild(content);\r\n                    }\r\n                    if(this.__internal.closeButton){\r\n                        var close = document.createElement('span');\r\n                        addClass(close, classes.close);\r\n                        close.setAttribute('data-close', true);\r\n                        this.element.appendChild(close);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Dismisses all open notifications except this.\r\n                 *\r\n                 */\r\n                dismissOthers: function () {\r\n                    notifier.dismissAll(this);\r\n                    return this;\r\n                }\r\n            });\r\n        }\r\n\r\n        //notifier api\r\n        return {\r\n            /**\r\n             * Gets or Sets notifier settings.\r\n             *\r\n             * @param {string} key The setting name\r\n             * @param {Variant} value The setting value.\r\n             *\r\n             * @return {Object}\tif the called as a setter, return the notifier instance.\r\n             */\r\n            setting: function (key, value) {\r\n                //ensure init\r\n                initialize(this);\r\n\r\n                if (typeof value === 'undefined') {\r\n                    //get\r\n                    return this.__internal[key];\r\n                } else {\r\n                    //set\r\n                    switch (key) {\r\n                    case 'position':\r\n                        this.__internal.position = value;\r\n                        updatePosition(this);\r\n                        break;\r\n                    case 'delay':\r\n                        this.__internal.delay = value;\r\n                        break;\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options\r\n             */\r\n            set:function(key,value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options\r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n             * Creates a new notification message\r\n             *\r\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            create: function (type, callback) {\r\n                //ensure notifier init\r\n                initialize(this);\r\n                //create new notification message\r\n                var div = document.createElement('div');\r\n                div.className = classes.message + ((typeof type === 'string' && type !== '') ? ' ' + classes.prefix + type : '');\r\n                return create(div, callback);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications.\r\n             *\r\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n             *\r\n             */\r\n            dismissAll: function (except) {\r\n                var clone = openInstances.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var  instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.dismiss();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * Alertify public API\r\n     * This contains everything that is exposed through the alertify object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    function Alertify() {\r\n\r\n        // holds a references of created dialogs\r\n        var dialogs = {};\r\n\r\n        /**\r\n         * Extends a given prototype by merging properties from base into sub.\r\n         *\r\n         * @sub {Object} sub The prototype being overwritten.\r\n         * @base {Object} base The prototype being written.\r\n         *\r\n         * @return {Object} The extended prototype.\r\n         */\r\n        function extend(sub, base) {\r\n            // copy dialog pototype over definition.\r\n            for (var prop in base) {\r\n                if (base.hasOwnProperty(prop)) {\r\n                    sub[prop] = base[prop];\r\n                }\r\n            }\r\n            return sub;\r\n        }\r\n\r\n\r\n        /**\r\n        * Helper: returns a dialog instance from saved dialogs.\r\n        * and initializes the dialog if its not already initialized.\r\n        *\r\n        * @name {String} name The dialog name.\r\n        *\r\n        * @return {Object} The dialog instance.\r\n        */\r\n        function get_dialog(name) {\r\n            var dialog = dialogs[name].dialog;\r\n            //initialize the dialog if its not already initialized.\r\n            if (dialog && typeof dialog.__init === 'function') {\r\n                dialog.__init(dialog);\r\n            }\r\n            return dialog;\r\n        }\r\n\r\n        /**\r\n         * Helper:  registers a new dialog definition.\r\n         *\r\n         * @name {String} name The dialog name.\r\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n         * @base {String} base the name of another dialog to inherit from.\r\n         *\r\n         * @return {Object} The dialog definition.\r\n         */\r\n        function register(name, Factory, transient, base) {\r\n            var definition = {\r\n                dialog: null,\r\n                factory: Factory\r\n            };\r\n\r\n            //if this is based on an existing dialog, create a new definition\r\n            //by applying the new protoype over the existing one.\r\n            if (base !== undefined) {\r\n                definition.factory = function () {\r\n                    return extend(new dialogs[base].factory(), new Factory());\r\n                };\r\n            }\r\n\r\n            if (!transient) {\r\n                //create a new definition based on dialog\r\n                definition.dialog = extend(new definition.factory(), dialog);\r\n            }\r\n            return dialogs[name] = definition;\r\n        }\r\n\r\n        return {\r\n            /**\r\n             * Alertify defaults\r\n             * \r\n             * @type {Object}\r\n             */\r\n            defaults: defaults,\r\n            /**\r\n             * Dialogs factory \r\n             *\r\n             * @param {string}      Dialog name.\r\n             * @param {Function}    A Dialog factory function.\r\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n             * @param {String}      The name of the base type to inherit from.\r\n             */\r\n            dialog: function (name, Factory, transient, base) {\r\n\r\n                // get request, create a new instance and return it.\r\n                if (typeof Factory !== 'function') {\r\n                    return get_dialog(name);\r\n                }\r\n\r\n                if (this.hasOwnProperty(name)) {\r\n                    throw new Error('alertify.dialog: name already exists');\r\n                }\r\n\r\n                // register the dialog\r\n                var definition = register(name, Factory, transient, base);\r\n\r\n                if (transient) {\r\n\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var instance = extend(new definition.factory(), dialog);\r\n                            //ensure init\r\n                            if (instance && typeof instance.__init === 'function') {\r\n                                instance.__init(instance);\r\n                            }\r\n                            instance['main'].apply(instance, arguments);\r\n                            return instance['show'].apply(instance);\r\n                        }\r\n                    };\r\n                } else {\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //ensure init\r\n                        if (definition.dialog && typeof definition.dialog.__init === 'function') {\r\n                            definition.dialog.__init(definition.dialog);\r\n                        }\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var dialog = definition.dialog;\r\n                            dialog['main'].apply(definition.dialog, arguments);\r\n                            return dialog['show'].apply(definition.dialog);\r\n                        }\r\n                    };\r\n                }\r\n            },\r\n            /**\r\n             * Close all open dialogs.\r\n             *\r\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeAll: function (except) {\r\n                var clone = openDialogs.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.close();\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n             *\r\n             * @param {string} name The dialog name.\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting: function (name, key, value) {\r\n\r\n                if (name === 'notifier') {\r\n                    return notifier.setting(key, value);\r\n                }\r\n\r\n                var dialog = get_dialog(name);\r\n                if (dialog) {\r\n                    return dialog.setting(key, value);\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set: function(name,key,value){\r\n                return this.setting(name, key,value);\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get: function(name, key){\r\n                return this.setting(name, key);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n             * This allows for custom look and feel for various types of notifications.\r\n             *\r\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n             * @param  {String}                 [type='']\t\t\t\tType of log message\r\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            notify: function (message, type, wait, callback) {\r\n                return notifier.create(type, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            message: function (message, wait, callback) {\r\n                return notifier.create(null, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'success'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            success: function (message, wait, callback) {\r\n                return notifier.create('success', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'error'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            error: function (message, wait, callback) {\r\n                return notifier.create('error', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'warning'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            warning: function (message, wait, callback) {\r\n                return notifier.create('warning', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            dismissAll: function () {\r\n                notifier.dismissAll();\r\n            }\r\n        };\r\n    }\r\n    var alertify = new Alertify();\r\n\r\n    /**\r\n    * Alert dialog definition\r\n    *\r\n    * invoked by:\r\n    *\talertify.alert(message);\r\n    *\talertify.alert(title, message);\r\n    *\talertify.alert(message, onok);\r\n    *\talertify.alert(title, message, onok);\r\n     */\r\n    alertify.dialog('alert', function () {\r\n        return {\r\n            main: function (_title, _message, _onok) {\r\n                var title, message, onok;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    if (typeof _message === 'function') {\r\n                        message = _title;\r\n                        onok = _message;\r\n                    } else {\r\n                        title = _title;\r\n                        message = _message;\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.ok,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                // nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                onok: undefined,\r\n                label: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'label':\r\n                    if (this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue;\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                if (typeof this.get('onok') === 'function') {\r\n                    var returnValue = this.get('onok').call(this, closeEvent);\r\n                    if (typeof returnValue !== 'undefined') {\r\n                        closeEvent.cancel = !returnValue;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Confirm dialog object\r\n     *\r\n     *\talertify.confirm(message);\r\n     *\talertify.confirm(message, onok);\r\n     *\talertify.confirm(message, onok, oncancel);\r\n     *\talertify.confirm(title, message, onok, oncancel);\r\n     */\r\n    alertify.dialog('confirm', function () {\r\n\r\n        var autoConfirm = {\r\n            timer: null,\r\n            index: null,\r\n            text: null,\r\n            duration: null,\r\n            task: function (event, self) {\r\n                if (self.isOpen()) {\r\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\r\n                    autoConfirm.duration -= 1;\r\n                    if (autoConfirm.duration === -1) {\r\n                        clearAutoConfirm(self);\r\n                        var button = self.__internal.buttons[autoConfirm.index];\r\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\r\n\r\n                        if (typeof self.callback === 'function') {\r\n                            self.callback.apply(self, [closeEvent]);\r\n                        }\r\n                        //close the dialog.\r\n                        if (closeEvent.close !== false) {\r\n                            self.close();\r\n                        }\r\n                    }\r\n                } else {\r\n                    clearAutoConfirm(self);\r\n                }\r\n            }\r\n        };\r\n\r\n        function clearAutoConfirm(self) {\r\n            if (autoConfirm.timer !== null) {\r\n                clearInterval(autoConfirm.timer);\r\n                autoConfirm.timer = null;\r\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\r\n            }\r\n        }\r\n\r\n        function startAutoConfirm(self, index, duration) {\r\n            clearAutoConfirm(self);\r\n            autoConfirm.duration = duration;\r\n            autoConfirm.index = index;\r\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\r\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\r\n            autoConfirm.task(null, self);\r\n        }\r\n\r\n\r\n        return {\r\n            main: function (_title, _message, _onok, _oncancel) {\r\n                var title, message, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 4:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                //nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: null,\r\n                labels: null,\r\n                onok: null,\r\n                oncancel: null,\r\n                defaultFocus: null,\r\n                reverseButtons: null,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'labels':\r\n                    if ('ok' in newValue && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].text = newValue.ok;\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if ('cancel' in newValue && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].text = newValue.cancel;\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                case 'defaultFocus':\r\n                    this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                clearAutoConfirm(this);\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            autoOk: function (duration) {\r\n                startAutoConfirm(this, 0, duration);\r\n                return this;\r\n            },\r\n            autoCancel: function (duration) {\r\n                startAutoConfirm(this, 1, duration);\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Prompt dialog object\r\n     *\r\n     * invoked by:\r\n     *\talertify.prompt(message);\r\n     *\talertify.prompt(message, value);\r\n     *\talertify.prompt(message, value, onok);\r\n     *\talertify.prompt(message, value, onok, oncancel);\r\n     *\talertify.prompt(title, message, value, onok, oncancel);\r\n     */\r\n    alertify.dialog('prompt', function () {\r\n        var input = document.createElement('INPUT');\r\n        var p = document.createElement('P');\r\n        return {\r\n            main: function (_title, _message, _value, _onok, _oncancel) {\r\n                var title, message, value, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    value = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    break;\r\n                case 4:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 5:\r\n                    title = _title;\r\n                    message = _message;\r\n                    value = _value;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('value', value);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: input,\r\n                        select: true\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                input.className = alertify.defaults.theme.input;\r\n                input.setAttribute('type', 'text');\r\n                input.value = this.get('value');\r\n                this.elements.content.appendChild(p);\r\n                this.elements.content.appendChild(input);\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                if (typeof message === 'string') {\r\n                    clearContents(p);\r\n                    p.innerHTML = message;\r\n                } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\r\n                    clearContents(p);\r\n                    p.appendChild(message);\r\n                }\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                labels: undefined,\r\n                onok: undefined,\r\n                oncancel: undefined,\r\n                value: '',\r\n                type:'text',\r\n                reverseButtons: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'value':\r\n                    input.value = newValue;\r\n                    break;\r\n                case 'type':\r\n                    switch (newValue) {\r\n                    case 'text':\r\n                    case 'color':\r\n                    case 'date':\r\n                    case 'datetime-local':\r\n                    case 'email':\r\n                    case 'month':\r\n                    case 'number':\r\n                    case 'password':\r\n                    case 'search':\r\n                    case 'tel':\r\n                    case 'time':\r\n                    case 'week':\r\n                        input.type = newValue;\r\n                        break;\r\n                    default:\r\n                        input.type = 'text';\r\n                        break;\r\n                    }\r\n                    break;\r\n                case 'labels':\r\n                    if (newValue.ok && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if (newValue.cancel && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    this.settings.value = input.value;\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    if(!closeEvent.cancel){\r\n                        input.value = this.settings.value;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    // CommonJS\r\n    if ( typeof module === 'object' && typeof module.exports === 'object' ) {\r\n        module.exports = alertify;\r\n    // AMD\r\n    } else if ( typeof define === 'function' && define.amd) {\r\n        define( [], function () {\r\n            return alertify;\r\n        } );\r\n    // window\r\n    } else if ( !window.alertify ) {\r\n        window.alertify = alertify;\r\n    }\r\n\r\n} ( typeof window !== 'undefined' ? window : this ) );\r\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Playfair+Display:400,700,900);\", \"\"]);\n\n// module\nexports.push([module.id, \"/* Device = Most of the Smartphones Mobiles (Portrait) */\\n/* Device = Low Resolution Tablets, Mobiles (Landscape) */\\n/* Device = Tablets, Ipads (portrait) */\\n/* Device = Laptops, Desktops */\\n/* Device = Desktops */\\n/* Higher Resolution Screens */\\n/*! ronaskl-kodcommerce-assets v1.0.0 | (c) 2020 Ronash Dhakal | ISC License */\\n/* line 1, src/sass/cart.scss */\\n/* line 7, src/sass/cart.scss */\\n.cart--summary .actions {\\n  display: flex;\\n  justify-content: space-between; }\\n\\n/* line 13, src/sass/cart.scss */\\n.cart--id {\\n  position: absolute;\\n  left: 16px;\\n  top: -11px;\\n  background: #00bfd8;\\n  border-radius: 20px;\\n  padding: 3px 7px;\\n  color: #fff; }\\n\\n/* line 22, src/sass/cart.scss */\\n.cart--empty-text {\\n  text-align: center;\\n  padding: 31px;\\n  font-size: 20px; }\\n\\n/* line 27, src/sass/cart.scss */\\n.cart--summary {\\n  padding: 25px;\\n  position: relative;\\n  border-radius: 3px 3px 24px 24px; }\\n\\n/* line 32, src/sass/cart.scss */\\n.cart--summary .bag-icon {\\n  position: absolute;\\n  top: -30px;\\n  width: 207px;\\n  height: 123px;\\n  border-radius: 50%;\\n  border-right: 1px solid #dcd8d8;\\n  border-left: 1px solid #dcd8d8;\\n  border-top: 6px solid #dcd8d8;\\n  border-bottom: 1px solid white;\\n  float: left;\\n  z-index: -1; }\\n\\n/* line 46, src/sass/cart.scss */\\n.cart--summary table {\\n  justify-content: center;\\n  display: flex; }\\n\\n/* line 50, src/sass/cart.scss */\\n#cart .cart-list {\\n  border: 1px dashed #d0d0d0;\\n  padding: 0 10px; }\\n\\n/* line 55, src/sass/cart.scss */\\n.cart-list .cart-item {\\n  position: relative;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n  box-shadow: 0 0 9px #e8e8e8;\\n  margin: 25px auto;\\n  padding: 10px; }\\n\\n/* line 64, src/sass/cart.scss */\\n.cart-list .cart-item > div {\\n  flex-basis: 20%;\\n  text-align: center; }\\n\\n/* line 70, src/sass/cart.scss */\\n.cart-item.label {\\n  padding: 10px;\\n  box-shadow: none; }\\n\\n/* line 74, src/sass/cart.scss */\\n.cart-list .cart-item img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  width: 100px;\\n  height: 100px;\\n  flex: 0; }\\n\\n/* line 80, src/sass/cart.scss */\\n.commerce-quantity {\\n  align-items: center;\\n  display: flex; }\\n\\n/* line 84, src/sass/cart.scss */\\n.commerce-quantity .commerce--quantity {\\n  display: flex;\\n  justify-content: space-around;\\n  width: 10vw;\\n  align-items: center;\\n  margin: 10px; }\\n\\n/* line 91, src/sass/cart.scss */\\n.commerce-quantity .commerce--quantity > div {\\n  cursor: pointer; }\\n\\n/* line 94, src/sass/cart.scss */\\n.commerce-quantity input::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0; }\\n\\n/* line 99, src/sass/cart.scss */\\n.commerce-quantity .commerce--quantity > input {\\n  -moz-appearance: textfield;\\n  width: 65px;\\n  padding: 5px;\\n  text-align: center; }\\n\\n/* line 107, src/sass/cart.scss */\\n.commerce--product-info {\\n  margin: 0 auto;\\n  display: grid;\\n  justify-content: center;\\n  grid-gap: 15px;\\n  gap: 15px;\\n  position: relative; }\\n\\n/* line 114, src/sass/cart.scss */\\n.commerce--product-info .commerce--wrapper {\\n  box-shadow: 0 0 4px #e0e0e0;\\n  padding: 20px; }\\n\\n@media (max-width: 425px) {\\n  /* line 120, src/sass/cart.scss */\\n  .commerce-quantity .commerce--quantity {\\n    width: 30vw; }\\n  /* line 123, src/sass/cart.scss */\\n  .cart-list .cart-item {\\n    display: grid;\\n    justify-content: center;\\n    align-items: center;\\n    box-shadow: 0 0 9px #e8e8e8;\\n    margin: 25px auto;\\n    grid-template-columns: 1fr 1fr;\\n    padding: 10px;\\n    grid-gap: 20px;\\n    gap: 20px; } }\\n\\n.variation-options > li {\\n  cursor: pointer;\\n  padding: 10px; }\\n\\n.options-item.color > div {\\n  height: 30px;\\n  width: 30px;\\n  border-radius: 30px;\\n  border: 2px solid #939494;\\n  box-shadow: -5px 4px 6px 0px; }\\n\\n.options-item {\\n  display: inline-grid; }\\n\\n.options-item.input > div {\\n  border: 2px solid #939494;\\n  background: #f6f9f9;\\n  text-align: center;\\n  padding: 5px;\\n  width: 35px;\\n  box-shadow: -5px 4px 6px 0px; }\\n\\n.options-item > div:hover, .options-item > div:active, .options-item > div.active {\\n  border: 2px solid #00bfbf;\\n  box-shadow: none; }\\n\\n.option-title {\\n  font-size: 15px;\\n  color: #00bfd9; }\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * (c) Ronash Dhakal\n * @type {{init: init}}\n */\nexport default  (function (kodObject) {\n        var config = {\n            key: \"cart\",\n            priceFormatter:{\n                locale:'en',\n               currency:\"NPR\",\n               thousandSeparator:\",\",\n                decimalSeparator:'.'\n\n            },\n            apiRoute: {\n                controller: \"/commerce/cart-api\",\n                indexAction: \"\",\n                addAction: \"add\",\n                removeAction: \"delete\",\n                clearAction: \"clear\",\n            }, //must  add / at the end of url\n\n            errorMessage: {\n                contentError: \"Oops, we haven't got JSON!\",\n\n            }\n        }\n\n\n        var UIController = (function () {\n            var DOMSelector = {\n                inputs: {\n                    quantity: '.commerce--quantity-input',\n                },\n                cartButtonsContainer: '.commerce--buttons',\n                container: {\n                    priceFormatter:'.format-price',\n                    cart: {\n                        item: {\n                            list: '.cart-list',\n                            total: '.cart--item-total'\n                        },\n                        total: '.cart--total',\n                        totalItems: '.cart-total-items',\n                        emptyText: '.cart--empty-text',\n                        summaryAction: '.cart--summary .actions',\n                    },\n                },\n                buttons: {\n                    quantityIncDec: '.commerce--quantity-inc-dec > i',\n                    addToCart: '.commerce--add-to-cart-btn',\n                    cartRemoveBtn: '.cart--remove-btn',\n                    cartSaveBtn: '.cart--save-btn',\n                    cartClearBtn: '.cart--clear-btn',\n                    cartCheckOutBtn: '.cart--checkout-btn'\n                },\n            }\n\n            /**\n             * UPdate Quantity\n             * @param value\n             * @param id\n             */\n            var updateQuantity = function (value, id) {\n\n\n                $(id).val(value);\n            }\n            /**\n             * Get quantity\n             * @param id\n             * @return {number}\n             */\n            var getQuantity = function (id) {\n                var value = $(id).val();\n\n                value = parseInt(value)\n                if (value < 2) {\n                    updateQuantity(1, id);\n                    return 1;\n                }\n                return value;\n\n            }\n\n            var disableButton = function (selector, value) {\n                $(selector).attr('disabled', value);\n            }\n\n            var displayTotals = function (value) {\n                $(DOMSelector.container.cart.totalItems).html(value);\n            }\n\n            var formatPrice = function(price){\n\n                 var cfg = config.priceFormatter;\n\n                return new Intl.NumberFormat(cfg.locale,{\n                    style:'currency',\n                    currency:cfg.currency\n                }).format(price);\n            }\n\n            var hideEmptyCartText = function (active = true) {\n                var ele = $(DOMSelector.container.cart.emptyText)\n                if (!active) {\n                    ele.fadeOut('Slow')\n                } else {\n                    ele.fadeIn('Slow')\n                }\n\n\n            }\n            var hideCartActions = function (active) {\n                var ele = $(DOMSelector.container.cart.summaryAction);\n                console.log(ele)\n                if (active) {\n                    ele.hide()\n                } else {\n                    ele.show();\n                }\n            }\n\n            var init = function (userSelector) {\n                Object.assign(DOMSelector, userSelector);\n            }\n\n\n            /**\n             * Get Sku and quantiy from cart item, listen from save button\n             * @param event\n             * @return {{quantity: number, sku: *}}\n             */\n            var getCartItemData = function (event) {\n                var target, sku, quantity;\n\n                if (event.target.tagName.toLowerCase() === 'button') {\n                    target = $(event.target);\n                } else {\n                    target = $(event.target).parent();\n                }\n                var parent = target.parent().parent();\n                sku = parent.data('sku');\n                var quantityEle = parent.find('input');\n                quantity = getQuantity(quantityEle)\n                var totalEle = parent.find(DOMSelector.container.cart.item.total)\n\n                return {sku, quantity, parent, totalEle};\n\n            }\n            var renderCartItem = function (item) {\n\n                var variation = Object.entries(item.variation.name);\n                var variationText = \"\"\n                for (let i = 0; i <variation.length ; i++) {\n                    variationText +=variation[i][0]+\" : \"+variation[i][1]+\", \"\n\n                }\n                var html = `<div class=\"cart-item\" data-sku=\"${item.sku}\">\n                             <div class=\"cart--id\"><i class=\"fa fa-shopping-basket\"></i></div>\n                            <img class=\"cart--item-image\" src=\"${item.image}\" alt=\"\">\n                            <div class=\"cart--item-label\">\n                                <strong>${item.label}</strong>\n                          \n                                <p class=\"cart--item-variation\">${variationText} </p>\n                                       <p class=\"cart--item-unit-price format-price\"> ${formatPrice(item.price)}</p>\n\n                            </div>\n                            <div class=\"cart--item-quantity commerce-quantity\">\n                                <div class=\"commerce--quantity\">\n                                    <div class=\"commerce--quantity-inc-dec \"><i class=\"fa fa-plus-circle inc\"></i></div>\n                                    <input class=\"commerce--quantity-input\" type=\"number\" min=\"1\"\n                                           value=\"${item.quantity}\">\n                                    <div class=\"commerce--quantity-inc-dec dec\"><i class=\"fa fa-minus-circle dec\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"cart--item-price\"><span class=\"cart--item-total format-price\">${formatPrice(item.calculatePrice())} </span>\n                           \n                               </div>\n                            <div class=\"actions\">\n                                <button title=\"save\" \n                                        class=\"btn btn-info cart--save-btn\"><i class=\"fa fa-save\"></i></button>\n                                <button title=\"Remove From cart\" data-toggle=\"tooltip\"\n                                        class=\"btn btn-danger cart--remove-btn\"><i class=\"fa fa-trash\"></i></button>\n                            </div>\n                        </div>`;\n\n                $(DOMSelector.container.cart.item.list).append(html);\n\n            }\n\n\n            return {\n                getSelector: DOMSelector,\n                hideEmptyCartText,\n                hideCartActions,\n                updateQuantity,\n                getQuantity,\n                disableButton,\n                displayTotals,\n                /**\n                 * Update button text\n                 * @param selector\n                 * @param text\n                 */\n                updateButtonText: function (selector, text) {\n                    $(selector).html(text)\n                },\n                setCartTotal: function (total) {\n                     $(DOMSelector.container.cart.total).html(formatPrice(total))\n\n                },\n                getCartTotal: function () {\n                    return parseInt($(DOMSelector.container.cart.total).html())\n                },\n                removeCartItemUI: function (selector) {\n                    $(selector).remove();\n                },\n                clearCartItem: function () {\n                    $('.cart-list').remove();\n                },\n                getCartItemData,\n                updateCartItemTotal: function (selector, total) {\n                    $(selector).html(formatPrice(total))\n                },\n                renderCartItem\n            }\n        })();\n\n        var cartController = (function () {\n\n            var loaded = false;\n            /**\n             * Store cart items\n             * @type {*[]}\n             */\n            var cart = {}\n\n            /**\n             * Cart Item Model\n             * @param sku\n             * @param quantity\n             * @constructor\n             */\n            var Item = function (sku, quantity = 1) {\n\n                this.sku = sku;\n                this.quantity = quantity;\n                this.price = null;\n                this.label = null;\n                this.variation = {\n                    name: {},\n                    price: 0\n                }\n                this.image = null;\n                this.product_id = null;\n            }\n\n            Item.prototype.calculatePrice = function () {\n                return this.price * this.quantity;\n            }\n            Item.prototype.productPrice = function () {\n                return this.price - this.variation.price;\n            }\n            Item.prototype.build = function (obj) {\n                Object.assign(this, obj);\n                return this;\n            }\n\n            /**\n             *\n             * @param sku\n             */\n            var increaseQuantity = function (sku) {\n                cart[sku].quantity++\n\n            }\n\n            /**\n             * Decrease Quantity\n             * @param sku\n             */\n            var decreaseQuantity = function (sku) {\n                cart[sku].quantity--\n            }\n            /**\n             * Local and server save;\n             */\n            var save = function () {\n                localStorage.setItem(config.key, JSON.stringify(cart))\n            }\n\n            /**\n             * Load carts from localstorage or from server\n             */\n            var load = function () {\n                //fetch cart from server and save it. if cart does not exists on server check on localstorage and assign it.\n\n                if (!loaded) {\n                    var data = JSON.parse(localStorage.getItem(config.key));\n                    if (data != null) {\n                        mapCartItems(data)\n                        loaded = !loaded;\n                    } else {\n                        fetchCartFromServer()\n                    }\n\n                }\n            }\n\n            /**\n             *\n             * @returns {{amount: number, items: number}}\n             */\n            var getTotal = function () {\n                // load();\n                var total = 0;\n                var count = 0;\n                getItems().forEach(function (item) {\n                    total += item.calculatePrice()\n                    count += item.quantity\n                })\n                return {\n                    items: count,\n                    amount: total\n                }\n            };\n\n            /**\n             * @return []\n             */\n            var getItems = function () {\n                if (typeof cart == null || typeof cart == \"undefined\") {\n                    cart = {};\n                }\n                return Object.values(cart);\n            }\n\n            /**\n             * Add to server\n             * @param item\n             * @return {Promise<T>}\n             */\n            function addItem(item) {\n                return kodObject.client(config.apiRoute.addAction, {sku: item.sku, quantity: item.quantity})\n                    .then(data => {\n                        cart[item.sku] = item.build(data)\n                        save();\n                        return cart[item.sku];\n                    }).catch(function(e){\n                       kodObject.Notification.notify.error(e.message)\n                })\n            }\n\n\n            /**\n             * Remove item from server\n             * @param sku\n             * @return {Promise<T>}\n             */\n            function removeItem(sku) {\n                return kodObject.client(config.apiRoute.removeAction, {sku})\n                    .then(x => {\n                        delete cart[sku];\n                        save();\n                        return x;\n                    })\n                    .catch(e => {\n                        //display in toast\n                        console.error(e)\n                        kodObject.Notification.notify.error(e.message);\n                        kodObject.Notification.notify.warning(\"Problem processing the cart. Clearing all items\");\n                        setTimeout(function(){\n                            clear()\n                        },1000)\n\n                    })\n            }\n\n            function initializeCart() {\n                if (typeof cart == null || typeof cart == \"undefined\") {\n                    cart = {}\n                }\n            }\n\n            /**\n             * Initialize Controller\n             */\n            var init = function () {\n\n                load();\n            }\n\n\n            function mapCartItems(data) {\n\n                var items = Object.values(data)\n\n                initializeCart();\n\n                for (let i = 0; i < items.length; i++) {\n\n                    cart[items[i].sku] = new Item(items[i].sku).build(items[i]);\n\n                }\n            }\n\n            /**\n             *\n             */\n            function fetchCartFromServer() {\n\n                kodObject.client(config.apiRoute.indexAction)\n                    .then(data => {\n                        if (data) {\n                            mapCartItems(data);\n                            save();\n                        } else {\n                            clear(false);\n                        }\n\n                    })\n                    .catch(e => {\n                        console.log(e)\n                    }).finally()\n\n\n            }\n\n            var clear = function (fromServer = true, onClear = null) {\n                if (!fromServer) {\n                    cart = null\n                    save();\n                    return;\n                }\n                kodObject.client(config.apiRoute.clearAction)\n                    .then(x => {\n                        cart = null;\n                        save();\n                        if (onClear) {\n                            onClear(x);\n                        }\n\n                    })\n                    .catch(e => {\n                        console.error(e)\n                    })\n            }\n            var isEmptyCart = function () {\n                return getItems().length < 1\n\n            }\n\n            /**\n             *\n             */\n            return {\n                Item,\n                init,\n                getTotal,\n                getItems,\n                isEmptyCart,\n                /**\n                 *\n                 * @param sku\n                 * @return {*}\n                 */\n                getCartItem: function (sku) {\n                    return cart[sku];\n                },\n                /**\n                 *\n                 * @returns {Promise<T>}\n                 */\n                fetchCart: fetchCartFromServer,\n                /**\n                 *\n                 * @param sku\n                 * @param quantity\n                 * @return {Promise<T>}\n                 */\n                add: function (sku, quantity) {\n                    // load();\n                    var item = new Item(sku, quantity)\n                    //send to server\n                    return addItem(item);\n\n\n                },\n                /**\n                 *\n                 * @param sku\n                 */\n                remove: function (sku) {\n                    // load();\n                    return removeItem(sku);\n\n\n                },\n                /**\n                 * cart\n                 */\n                clear,\n                increaseQuantity,\n                decreaseQuantity\n\n            }\n\n        })();\n\n\n        /**\n         * Main Controller\n         * @type {{init: init}}\n         */\n        var AppController = (function (UICtrl, cartCtrl) {\n            var DOMSelector = UICtrl.getSelector;\n            var noty = kodObject.Notification;\n\n            /**\n             * common methods\n             * @type {{addToCart: addToCart}}\n             */\n            var methods = {\n                clearUI: function () {\n                    hideCartElement(true)\n                    UICtrl.clearCartItem()\n                    UICtrl.displayTotals(0);\n                    UICtrl.setCartTotal(0);\n                },\n                addToCart: function (sku, quantity, disableButton, onSuccess = null) {\n                    cartCtrl.add(sku, quantity).then(function (e) {\n                        disableButton(false);\n                        var totals = cartCtrl.getTotal();\n                        UICtrl.setCartTotal(totals.amount);\n                        UICtrl.displayTotals(totals.items);\n                        if (onSuccess) {\n                            onSuccess(e);\n                        }\n                    }).catch(function(e){\n                        noty.notify.error(e.message)\n                    })\n                }\n            }\n\n\n            var actions = {\n                /**\n                 * Inc Dec quantity\n                 * @param event\n                 */\n                updateQuantity: function (event) {\n\n                    var target = $(event.target);\n                    var inputEle = target.parent().parent().find('input');\n                    var value = UICtrl.getQuantity(inputEle);\n\n                    if (target.hasClass('inc')) {\n                        value += 1;\n                    } else {\n                        if (value < 2) {\n                            value = 1\n                        } else {\n                            value -= 1;\n                        }\n\n                    }\n\n                    UICtrl.updateQuantity(value, inputEle);\n                },\n                addToCart: function (event) {\n\n                    var target = $(event.target);\n                    var sku = target.data('sku');\n                    var product_type = parseInt(target.data('product_type'));\n                    var quantity = UICtrl.getQuantity(DOMSelector.inputs.quantity)\n\n                    if (product_type && target.data('sku') === '') {\n                       noty.notify.warning('Please select Product Variation')\n                    }\n\n                    function disableButton(toggle) {\n                        UICtrl.disableButton(DOMSelector.buttons.addToCart, toggle)\n                    }\n\n                    disableButton(true);\n                    UICtrl.updateButtonText(DOMSelector.buttons.addToCart, \"Update\")\n                    //add to cart\n                    methods.addToCart(sku, quantity, disableButton, function (item) {\n                        noty.notify.success(item.label + \" Added to the card\")\n                    });\n\n\n                },\n\n\n                updateToCart: function (event) {\n\n                    var {sku, quantity, totalEle} = UICtrl.getCartItemData(event);\n\n                    function disableButton(toggle) {\n                        UICtrl.disableButton(DOMSelector.buttons.cartSaveBtn, toggle)\n                    }\n\n                    disableButton(true);\n                    //add to cart\n                    methods.addToCart(sku, quantity, disableButton, function (item) {\n                        noty.notify.success(item.label + \" updated\")\n                        UICtrl.updateCartItemTotal(totalEle, cartCtrl.getCartItem(sku).calculatePrice())\n                    });\n                },\n\n                removeFromCart: function (event) {\n                    var {sku, parent} = UICtrl.getCartItemData(event);\n\n                    noty.confirm('Are you sure',\n                        function () {\n                            cartCtrl.remove(sku).then(function (data) {\n                                noty.notify.success(\"Item Removed\")\n                                UICtrl.removeCartItemUI(parent);\n                                var {amount, items} = cartCtrl.getTotal();\n                                if (items === 0) {\n                                    methods.clearUI();\n                                    return;\n                                }\n                                UICtrl.setCartTotal(amount);\n                                UICtrl.displayTotals(items)\n                                var isEmpty = cartCtrl.isEmptyCart();\n                                hideCartElement(isEmpty);\n                            })\n                        },\n                        function () {\n                            noty.notify.warning(\"Action Aborted\")\n                        }\n                    )\n\n                },\n\n                clearCart: function (event) {\n                    noty.confirm('Are you sure?', function () {\n                        cartCtrl.clear(true, function () {\n                            noty.notify.success(\"Cart items has been cleared!\");\n                            methods.clearUI();\n                        })\n                    })\n\n                }\n            }\n\n\n            function hideCartElement(isEmpty) {\n                UICtrl.hideEmptyCartText(isEmpty);\n                UICtrl.hideCartActions(isEmpty)\n            }\n\n            /**\n             * Events\n             */\n            var setupEvents = function () {\n                //incDec Quantity\n                $(DOMSelector.buttons.quantityIncDec).on('click', actions.updateQuantity)\n                $(DOMSelector.buttons.addToCart).on('click', actions.addToCart)\n                $(DOMSelector.buttons.cartSaveBtn).on('click', actions.updateToCart)\n                $(DOMSelector.buttons.cartRemoveBtn).on('click', actions.removeFromCart)\n                $(DOMSelector.buttons.cartClearBtn).on('click', actions.clearCart)\n            }\n\n\n            var loadCartToUI = function () {\n                function getActionType() {\n                    var str = location.href;\n                    var n = str.lastIndexOf('/');\n                    return str.substring(n + 1);\n                }\n\n                var {amount, items} = cartCtrl.getTotal();\n\n                UICtrl.displayTotals(items)\n                var cartItems = cartCtrl.getItems();\n\n                function renderCartItems() {\n                    if (getActionType() === config.key) {\n\n                        if (cartItems.length < 1) {\n                            methods.clearUI();\n                            return;\n                        }\n\n                        UICtrl.setCartTotal(amount);\n                        var item;\n                        for (let i = 0; i < cartItems.length; i++) {\n                            item = new cartCtrl.Item('new').build(cartItems[i]);\n\n                            UICtrl.renderCartItem(item);\n                        }\n\n                    }\n                }\n\n                renderCartItems();\n\n            }\n\n            var init = function () {\n                cartCtrl.init();\n                loadCartToUI();\n                setupEvents();\n\n            }\n            return {\n                init\n            }\n        })(UIController, cartController);\n\n\n        /**\n         * Initialize\n         */\n        return {\n            init : function(userConfig = null){\n                if(userConfig){\n                    Object.assign(config,userConfig);\n                }\n                kodObject.init(config.apiRoute);\n                AppController.init();\n            }\n        }\n\n    }\n);\n\n"," import './sass/main.scss'\r\nimport alertify from 'alertifyjs';\r\n\r\nimport kodCommerce from './kodCommerce';\r\nimport kodCart from './cart';\r\nimport kodVariation from './variation';\r\n\r\n    const cart  = kodCart(kodCommerce(alertify)).init(window.kodCommerce.cartConfig)\r\n    const variation = kodVariation(kodCommerce(alertify)).init(window.kodCommerce.variationConfig)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/*\r\n(c) Ronash Dhakal\r\n */\r\n\r\nexport default (function(alertify){\r\n    var config = {};\r\n\r\n    /**\r\n     * API\r\n     * @param endpoint\r\n     * @param data\r\n     * @returns {Promise<Response>}\r\n     */\r\n  var api =  function (endpoint, data = null) {\r\n        var apiurl = config.controller + \"/\";\r\n\r\n        var url = apiurl + endpoint;\r\n\r\n        if (data) {\r\n\r\n            return  fetch(url, {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'same-origin', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRF-Token': document.querySelector(\"input[name='_csrf']\").value,\r\n                    //'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n            })\r\n\r\n        } else {\r\n            return  fetch(url);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Public method\r\n     * @param endpoint\r\n     * @param data\r\n     * @returns {Promise<Response>}\r\n     */\r\n    var client = function (endpoint, data) {\r\n        return api(endpoint, data)\r\n            .then(response => {\r\n                const contentType = response.headers.get('content-type');\r\n                if (!contentType || !contentType.includes('application/json')) {\r\n                    throw new TypeError(\"Application Error\");\r\n                }\r\n                switch (response.status) {\r\n                    case 200:\r\n                        return response.json();\r\n                    case 422:\r\n                        return response.json().then(x => {\r\n                            throw new TypeError(x);\r\n                        })\r\n\r\n                    default:\r\n                        throw new TypeError(response.statusText);\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n    return {\r\n        init: function(developerConifg){\r\n          Object.assign(config,developerConifg)\r\n        },\r\n      client,\r\n\r\n        /**\r\n         * Notification Module\r\n         */\r\n        Notification: (function (engine) {\r\n\r\n            var success = function (msg) {\r\n                return engine.success(msg)\r\n            }\r\n            var warning = function (msg) {\r\n                return engine.warning(msg);\r\n            }\r\n            var error = function (msg) {\r\n                return engine.error(msg);\r\n            }\r\n            var dismissAll = function () {\r\n                setTimeout(function () {\r\n                    engine.dismissAll();\r\n                }, 1000);\r\n            }\r\n\r\n            var confirm = function (msg, onSuccess, onReject) {\r\n                engine.confirm('Warning!', msg,\r\n                    onSuccess,\r\n                    onReject);\r\n\r\n            }\r\n            return {\r\n                confirm,\r\n                notify: {\r\n                    success,\r\n                    warning,\r\n                    error,\r\n                    dismissAll\r\n                }\r\n            }\r\n        })(alertify)\r\n    }\r\n});\r\n\r\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--4-2!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--4-2!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--4-2!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export default (function (kodObject) {\r\n        var config = {\r\n            apiRoute: {\r\n                controller: \"/commerce/product-api\",\r\n                indexAction: \"index\",\r\n            }, //must  add / at the end of url\r\n\r\n            errorMessage: {\r\n                contentError: \"Oops, we haven't got JSON!\",\r\n\r\n            },\r\n        }\r\n        var noty = kodObject.Notification;\r\n\r\n        var VariationController = (function (serverCtrl) {\r\n            var selectedVariation = {}\r\n\r\n            var getSKU = function(productId){\r\n\r\n               return serverCtrl.client(config.apiRoute.indexAction+'?id='+productId,selectedVariation).catch(function(e){\r\n                    console.error(e);\r\n                    noty.notify.error(e);\r\n               });\r\n\r\n            }\r\n            return {\r\n                setVariation: function (name, value) {\r\n                    selectedVariation[name] = value;\r\n                    return selectedVariation;\r\n                },\r\n                totalSelected: function () {\r\n                    return Object.entries(selectedVariation).length\r\n                },\r\n                getVariation: function (name = null) {\r\n                    if (name) {\r\n                        return selectedVariation[name];\r\n                    } else {\r\n                        return selectedVariation;\r\n                    }\r\n                },\r\n                getSKU,\r\n            }\r\n\r\n        })(kodObject);\r\n\r\n        var UIController = (function () {\r\n\r\n            var DOMSelector = {\r\n\r\n                    variations: '.product-variations',\r\n                    price:'.commerce--product-price',\r\n                    stock:'.commerce--product-stock',\r\n                    addToCartBtn: '.commerce--add-to-cart-btn'\r\n\r\n            }\r\n            var price = {\r\n                get:function () {\r\n\r\n                    return $(DOMSelector.price).html();\r\n                },\r\n                set:function (price) {\r\n                    $(DOMSelector.price).html(price);\r\n                }\r\n            }\r\n\r\n            var getVariationData = function () {\r\n                var $product = $(DOMSelector.variations);\r\n                var totalVariations = $product.data('variations');\r\n                var productId = $product.data('product');\r\n                return {totalVariations, productId};\r\n            }\r\n\r\n            var getVariationAttribute = function (e) {\r\n                var target = $(e.target);\r\n                var parent = $(target.parent());\r\n                var attributeName = $(parent.parent()).data('attribute');\r\n                var attributeValue = target.data('value');\r\n                var parentClass = parent.attr('class').split(' ')[1];\r\n                if (target.hasClass('active')) {\r\n                    //target.removeClass('active');\r\n                    // this.variationList = null;\r\n                    return;\r\n                }\r\n                $('.options-item.' + parentClass + ' > div').removeClass('active');\r\n                target.addClass('active');\r\n\r\n                return {attributeName, attributeValue}\r\n            }\r\n            var loading = function(active){\r\n                var ele =  $('#kodCms-loading');\r\n                if(active){\r\n                    ele.fadeIn()\r\n                }else{\r\n                    ele.fadeOut();\r\n                }\r\n\r\n            }\r\n            var stock = function (msg=null) {\r\n                        return  $(DOMSelector.stock).html(msg)\r\n            }\r\n            var disableButton = function (value) {\r\n                $(DOMSelector.addToCartBtn).attr('disabled', value);\r\n            }\r\n\r\n            /**\r\n             * SKU\r\n             * @type {{set: set, remove: remove}}\r\n             */\r\n            var sku = {\r\n                set: function (sku) {\r\n                    var buttonEle =  $(DOMSelector.addToCartBtn);\r\n                    buttonEle.data(\"sku\",sku)\r\n                    buttonEle.attr('disabled', false);\r\n                },\r\n                remove:function(){\r\n                    var buttonEle =  $(DOMSelector.addToCartBtn);\r\n                    buttonEle.data('sku',null)\r\n                    buttonEle.attr('disabled', true);\r\n                }\r\n            }\r\n\r\n\r\n            return {\r\n                getDomSelector: DOMSelector,\r\n                getVariationData,\r\n                getVariationAttribute,\r\n                price,\r\n                loading,\r\n                stock,\r\n                sku\r\n            }\r\n        })();\r\n\r\n        var AppController = (function (variationCtrl, UICtrl) {\r\n\r\n            var actions = {\r\n                index: function (e) {\r\n                    var {totalVariations, productId} = UICtrl.getVariationData()\r\n                    var {attributeName, attributeValue} = UICtrl.getVariationAttribute(e);\r\n\r\n                    variationCtrl.setVariation(attributeName, attributeValue);\r\n\r\n                        console.log(variationCtrl.totalSelected(),variationCtrl.getVariation())\r\n                    if (variationCtrl.totalSelected() === totalVariations) {\r\n                       UICtrl.loading(true)\r\n                      variationCtrl.getSKU(productId)\r\n                          .then(function(res){\r\n                              if(res.stock){\r\n                                  UICtrl.price.set(res.price);\r\n                                  UICtrl.stock(\"Available\");\r\n                                  UICtrl.sku.set(res.sku)\r\n                              }else{\r\n                                  UICtrl.stock(\"Unavailable\");\r\n                                  UICtrl.sku.remove();\r\n                                  UICtrl.price.set(res.price);\r\n                              }\r\n                          })\r\n                          .finally(function(){\r\n                              UICtrl.loading(false)\r\n                      })\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            var setupEvents = function () {\r\n\r\n                $('.options-item > div').on('click',actions.index);\r\n            }\r\n\r\n            return {\r\n                init: function () {\r\n                    setupEvents();\r\n                }\r\n            }\r\n        })(VariationController, UIController);\r\n\r\n\r\n        /**\r\n         * Initialize\r\n         */\r\n\r\n       return {\r\n           init:function(userConfig=null){\r\n               if(userConfig){\r\n                   Object.assign(config,userConfig);\r\n               }\r\n               kodObject.init(config.apiRoute)\r\n               AppController.init();\r\n           }\r\n       }\r\n    }\r\n);\r\n"],"sourceRoot":""}